{
  "openapi": "3.0.1",
  "info": {
    "title": "Modules API 1.0",
    "description": "Modules API",
    "version": "1.0"
  },
  "paths": {
    "/api/v1.0/modules/icons": {
      "get": {
        "tags": [
          "Application"
        ],
        "summary": "Get modules icons names",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetModulesIcons"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/modules/colors": {
      "get": {
        "tags": [
          "Application"
        ],
        "summary": "Get modules colors",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetModulesColors"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/modules/suggestions": {
      "get": {
        "tags": [
          "Application"
        ],
        "summary": "get modules suggestions list",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetModulesSuggestions"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/languages": {
      "get": {
        "tags": [
          "Application"
        ],
        "summary": "Get languages",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLanguages"
                }
              }
            }
          }
        }
      }
    },
    "/uploads": {
      "post": {
        "tags": [
          "Application"
        ],
        "summary": "upload media",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Uploads"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/auth": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GetUserTokenParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUserTokenParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUserTokenParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetUserTokenParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserToken"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/companies/{companyId}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get a company.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The parent project id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "the company id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCompany"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/companies": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get companies.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The id of the project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "continuous_token",
            "in": "query",
            "description": "continuous token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number max of companies to get.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCompanies"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Companies"
        ],
        "summary": "Create companies.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The parent project id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "Parameters to create companies.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompaniesParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompaniesParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompaniesParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompaniesParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCompanies"
                }
              }
            }
          },
          "206": {
            "description": "Partial Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCompanies"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Companies"
        ],
        "summary": "Update companies.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The parent project id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "Parameters to update companies.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCompaniesParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCompaniesParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCompaniesParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCompaniesParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCompanies"
                }
              }
            }
          },
          "206": {
            "description": "Partial Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCompanies"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Companies"
        ],
        "summary": "Delete companies.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The parent project id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "Parameters to create companies.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteCompaniesParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteCompaniesParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteCompaniesParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteCompaniesParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/companies/{companyId}/remove-members": {
      "post": {
        "tags": [
          "Companies"
        ],
        "summary": "remove members in company",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyMembersListParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyMembersListParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyMembersListParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyMembersListParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/companies/{companyId}/add-members": {
      "post": {
        "tags": [
          "Companies"
        ],
        "summary": "a members in company",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyMembersListParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyMembersListParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyMembersListParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyMembersListParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/documents": {
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "create a document",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDocumentParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDocumentParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDocumentParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDocumentParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDocument"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get all documents.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The parent project id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "continuous_token",
            "in": "query",
            "description": "continuous token.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number max of plan to get.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDocuments"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/documents/{documentId}": {
      "put": {
        "tags": [
          "Documents"
        ],
        "summary": "Update Document.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The parent project id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The document id to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "The new parameter of the document.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDocumentParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDocumentParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDocumentParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDocumentParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Documents"
        ],
        "summary": "delete company",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get Documents.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The parent project id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The document Id to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/forms": {
      "get": {
        "tags": [
          "Forms"
        ],
        "summary": "get form instances list with reduced informations",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "module_id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "default": 50
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetReducedFormInstances"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Forms"
        ],
        "summary": "create a form instance",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFormInstanceParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFormInstanceParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFormInstanceParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFormInstanceParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateFormInstance"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/forms/differential": {
      "get": {
        "tags": [
          "Forms"
        ],
        "summary": "get forminstances differential",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "continuous_token",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFormInstances"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/forms/{formId}": {
      "get": {
        "tags": [
          "Forms"
        ],
        "summary": "Get a form",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The parent project's id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "formId",
            "in": "path",
            "description": "The form's id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetForm"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Forms"
        ],
        "summary": "update a form instance",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "formId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFormInstanceParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFormInstanceParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFormInstanceParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFormInstanceParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateFormInstance"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/forms/{formId}/form-instances/{formInstanceId}": {
      "get": {
        "tags": [
          "Forms"
        ],
        "summary": "Get a form answers",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The parent project's id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "formId",
            "in": "path",
            "description": "The form's id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "formInstanceId",
            "in": "path",
            "description": "the form instance id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormInstanceAnswer"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/forms-priorities": {
      "get": {
        "tags": [
          "Forms"
        ],
        "summary": "Get all the forms priorities for a project",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "continuous_token",
            "in": "query",
            "description": "continuous token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number max to get.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPriorities"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/formsforms": {
      "get": {
        "tags": [
          "Forms"
        ],
        "summary": "Get form template for project and module",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "module_id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetForms"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/form-answers/{answerId}": {
      "put": {
        "tags": [
          "Forms"
        ],
        "summary": "Update a form answer",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "answerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFormAnswerParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFormAnswerParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFormAnswerParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFormAnswerParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateFormAnswer"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Forms"
        ],
        "summary": "Delete an answer",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "answerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/form-answers": {
      "post": {
        "tags": [
          "Forms"
        ],
        "summary": "create a form answer",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFormAnswerParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFormAnswerParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFormAnswerParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFormAnswerParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateFormAnswer"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/form-answers/{answerId}/attach-media": {
      "post": {
        "tags": [
          "Forms"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "answerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddMediaFormAnswerParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddMediaFormAnswerParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddMediaFormAnswerParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddMediaFormAnswerParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateFormAnswer"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/form-answers/{answerId}/detach-media": {
      "post": {
        "tags": [
          "Forms"
        ],
        "summary": "detach a media in form answer",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "answerId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DelMediaFormAnswerParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DelMediaFormAnswerParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DelMediaFormAnswerParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DelMediaFormAnswerParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateFormAnswer"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/form-answers/link": {
      "post": {
        "tags": [
          "Forms"
        ],
        "summary": "link item to form instance",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddItemFormAnswerParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddItemFormAnswerParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddItemFormAnswerParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddItemFormAnswerParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddItemMessage"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/forms/{formId}/messages": {
      "get": {
        "tags": [
          "Forms"
        ],
        "summary": "get messages for 1 form instance",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "formId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "message_id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "get_newest",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMessages"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Forms"
        ],
        "summary": "push message for 1 form instance",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "formId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SetMessageParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetMessageParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetMessageParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetMessageParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddItemMessage"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/forms/report/generate": {
      "post": {
        "tags": [
          "Forms"
        ],
        "summary": "create a form unit report",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GeneratePdfUnitReportParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GeneratePdfUnitReportParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GeneratePdfUnitReportParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GeneratePdfUnitReportParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneratePdfUnitReport"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/forms/report/get": {
      "post": {
        "tags": [
          "Forms"
        ],
        "summary": "get form report url",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GetGeneratedPdfUnitReportParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetGeneratedPdfUnitReportParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetGeneratedPdfUnitReportParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetGeneratedPdfUnitReportParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGeneratedPdfUnitReport"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/forms/report/xls": {
      "post": {
        "tags": [
          "Forms"
        ],
        "summary": "get xls form report",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateXlsFormParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateXlsFormParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateXlsFormParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateXlsFormParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateXlsForm"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/forms/custom/generate": {
      "post": {
        "tags": [
          "Forms"
        ],
        "summary": "Generate Custom Report for a form instance",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateCustomReportParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateCustomReportParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateCustomReportParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateCustomReportParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateCustomReport"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/forms/{formId}/full": {
      "get": {
        "tags": [
          "Forms"
        ],
        "summary": "Get Form instance Full Detail",
        "description": "Get formulaire detail",
        "operationId": "GetFormulaireDetail",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "formId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFormFull"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/groups": {
      "post": {
        "tags": [
          "Groups"
        ],
        "summary": "Create groups.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The parent project id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "Parameters to create groups.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGroupsParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGroupsParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGroupsParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGroupsParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateGroups"
                }
              }
            }
          },
          "206": {
            "description": "Partial Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateGroups"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Get groups.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The parent project id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGroups"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/groups/{groupId}": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Get 1 group.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The parent project id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOneGroup"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Groups"
        ],
        "summary": "Update 1 group.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The parent project id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGroupParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGroupParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGroupParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGroupParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOneGroup"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/groups/{groupId}/add_members": {
      "post": {
        "tags": [
          "Groups"
        ],
        "summary": "Update group members list.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The parent project id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeGroupMembersParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeGroupMembersParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeGroupMembersParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeGroupMembersParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeGroupMembers"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/groups/{groupId}/remove_members": {
      "post": {
        "tags": [
          "Groups"
        ],
        "summary": "remove members for group",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeGroupMembersParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeGroupMembersParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeGroupMembersParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeGroupMembersParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeGroupMembers"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/groups/{groupId}/messages": {
      "post": {
        "tags": [
          "Groups"
        ],
        "summary": "push messages for 1 group",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SetMessageParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetMessageParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetMessageParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetMessageParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddItemMessage"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "get messages for 1 group",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "message_id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "get_newest",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMessages"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/groups/item": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "get groups for 1 item",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "item_id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "item_type",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGroupsForItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/folders": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Get folders.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The id of the project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "continuous_token",
            "in": "query",
            "description": "continuous token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number max of folders to get.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFolders"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Locations"
        ],
        "summary": "create a folder",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFolderParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFolderParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFolderParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFolderParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/plans/{planId}": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Get plan.",
        "description": "the media resource rootId is used to get the file in the endpont api/v{version:apiVersion}/medias/{mediaId}",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The id of the project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "planId",
            "in": "path",
            "description": "The id of the plan",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlan"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Locations"
        ],
        "summary": "update a plan",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "planId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlan"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Locations"
        ],
        "summary": "delete a plan",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "planId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/plans": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Get plans.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The id of the project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "continuous_token",
            "in": "query",
            "description": "continuous token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number max of plan to get.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlans"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Locations"
        ],
        "summary": "Create Plans.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The parent project id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "Parameters to create plans.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlanParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlanParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlanParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlanParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plan"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/folders/{folderId}": {
      "put": {
        "tags": [
          "Locations"
        ],
        "summary": "update a folder",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folderId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFolderParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFolderParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFolderParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFolderParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Locations"
        ],
        "summary": "delete a folder",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folderId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/plansfromdoc": {
      "post": {
        "tags": [
          "Locations"
        ],
        "summary": "create a plan from a document",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlanFromDocumentParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlanFromDocumentParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlanFromDocumentParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlanFromDocumentParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plan"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/plans/upload_bim": {
      "post": {
        "tags": [
          "Locations"
        ],
        "summary": "Upload bim part",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plan"
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/logos": {
      "get": {
        "tags": [
          "Logos"
        ],
        "summary": "Get Logos.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The id of the project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLogos"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Logos"
        ],
        "summary": "Add a logo to project",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddLogoParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddLogoParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddLogoParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddLogoParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaResponseWithUrl"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Logos"
        ],
        "summary": "remove a logo in a project",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DelLogoParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DelLogoParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DelLogoParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DelLogoParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v1.0/medias/{mediaId}": {
      "get": {
        "tags": [
          "Medias"
        ],
        "summary": "Get a media resource (not a media)",
        "description": "Get media content",
        "operationId": "GetMediaContent",
        "parameters": [
          {
            "name": "mediaId",
            "in": "path",
            "description": "id of the media",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/medias/uploads": {
      "post": {
        "tags": [
          "Medias"
        ],
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Uploads"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/medias/uploadinit": {
      "post": {
        "tags": [
          "Medias"
        ],
        "summary": "start chunk upload",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UploadChunkInitParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadChunkInitParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadChunkInitParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UploadChunkInitParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadChunkInit"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/medias/{mediaId}/uploadappend": {
      "post": {
        "tags": [
          "Medias"
        ],
        "summary": "append a chunk to 1 upload",
        "parameters": [
          {
            "name": "mediaId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v1.0/medias/{mediaId}/uploadterminate": {
      "post": {
        "tags": [
          "Medias"
        ],
        "summary": "validate a chunk upload",
        "parameters": [
          {
            "name": "mediaId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UploadChunkFinalizeParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadChunkFinalizeParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadChunkFinalizeParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UploadChunkFinalizeParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Media"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/medias/{mediaId}/uploadabort": {
      "post": {
        "tags": [
          "Medias"
        ],
        "summary": "abort a chunk upload",
        "parameters": [
          {
            "name": "mediaId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UploadChunkFinalizeParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadChunkFinalizeParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadChunkFinalizeParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UploadChunkFinalizeParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Media"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/medias/{mediaId}/url": {
      "get": {
        "tags": [
          "Medias"
        ],
        "summary": "Get a media resource Url (not a media)",
        "description": "Get media url",
        "operationId": "GetMediaUrl",
        "parameters": [
          {
            "name": "mediaId",
            "in": "path",
            "description": "id of the media",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaResourceUrl"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/meetings": {
      "get": {
        "tags": [
          "Meetings"
        ],
        "summary": "get meetings list",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "continuous_token",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMeetings"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/meetings/{meetingId}": {
      "get": {
        "tags": [
          "Meetings"
        ],
        "summary": "get 1 meeting details",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "meetingId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMeetingDetail"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/modules/meetings": {
      "post": {
        "tags": [
          "Meetings"
        ],
        "summary": "activate meeting module",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleMeetingParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleMeetingParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleMeetingParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleMeetingParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateModuleMeeting"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/modules/meetings/{moduleId}": {
      "get": {
        "tags": [
          "Meetings"
        ],
        "summary": "get meeting module details",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moduleId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Module"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Meetings"
        ],
        "summary": "update meeting module details",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moduleId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PutModuleMeetingParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutModuleMeetingParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PutModuleMeetingParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PutModuleMeetingParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Module"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/organization-roles": {
      "get": {
        "tags": [
          "Members"
        ],
        "summary": "Get organization roles",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRoles"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/members": {
      "post": {
        "tags": [
          "Members"
        ],
        "summary": "Get organization members",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "default": 50
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GetOrgaMembersParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetOrgaMembersParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetOrgaMembersParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetOrgaMembersParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrgaMembers"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/add-members": {
      "post": {
        "tags": [
          "Members"
        ],
        "summary": "add orga member",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddOrgaMembersParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddOrgaMembersParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddOrgaMembersParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddOrgaMembersParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/remove-members": {
      "post": {
        "tags": [
          "Members"
        ],
        "summary": "remove user from orga",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DelOrgaMembersParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DelOrgaMembersParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DelOrgaMembersParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DelOrgaMembersParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/change-members-role": {
      "post": {
        "tags": [
          "Members"
        ],
        "summary": "change user role",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddOrgaRoleMembersParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddOrgaRoleMembersParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddOrgaRoleMembersParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddOrgaRoleMembersParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/change-members-role-bulk": {
      "post": {
        "tags": [
          "Members"
        ],
        "summary": "change user role bulk",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddOrgaMembersParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddOrgaMembersParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddOrgaMembersParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddOrgaMembersParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/modules": {
      "post": {
        "tags": [
          "Modules"
        ],
        "summary": "Create a module from scratch",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateModule"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Modules"
        ],
        "summary": "Get list of observations modules",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "continuous_token",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetModules"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/modules/{moduleId}": {
      "put": {
        "tags": [
          "Modules"
        ],
        "summary": "update a module",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moduleId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateModule"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Modules"
        ],
        "summary": "get a module observation",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moduleId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Module"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/forms-modules/{moduleId}": {
      "put": {
        "tags": [
          "Modules"
        ],
        "summary": "update formulaire module",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moduleId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateModuleForm"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Modules"
        ],
        "summary": "get a formulaire module",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moduleId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleFormWithContainer"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/modules/suggestion": {
      "post": {
        "tags": [
          "Modules"
        ],
        "summary": "Create a module by suggestion",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleBySuggestionParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleBySuggestionParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleBySuggestionParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleBySuggestionParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateModule"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/modules/forms-suggestion": {
      "post": {
        "tags": [
          "Modules"
        ],
        "summary": "create a form module by suggestion",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleBySuggestionParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleBySuggestionParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleBySuggestionParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleBySuggestionParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateModuleForm"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/forms-modules": {
      "get": {
        "tags": [
          "Modules"
        ],
        "summary": "get list of formulaires modules",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "continuous_token",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "with_deleted",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetModulesForm"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/forms-modules/{moduleId}/link-form": {
      "post": {
        "tags": [
          "Modules"
        ],
        "summary": "add link form/module",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moduleId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LinkProjectModuleFormsParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkProjectModuleFormsParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkProjectModuleFormsParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LinkProjectModuleFormsParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleFormWithContainer"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/forms-modules/{moduleId}/unlink-form": {
      "post": {
        "tags": [
          "Modules"
        ],
        "summary": "remove link form/module",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moduleId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LinkProjectModuleFormsParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkProjectModuleFormsParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkProjectModuleFormsParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LinkProjectModuleFormsParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleFormWithContainer"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/trades": {
      "post": {
        "tags": [
          "Modules"
        ],
        "summary": "Create trade for a module",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTradeParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTradeParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTradeParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTradeParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTrade"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Observations"
        ],
        "summary": "Get trades for a project",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "continuous_token",
            "in": "query",
            "description": "continuous token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number max to get.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTrades"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/commonobservations": {
      "post": {
        "tags": [
          "Modules"
        ],
        "summary": "Create common obs for  trade",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommonObsParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommonObsParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommonObsParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommonObsParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectCommonObs"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Observations"
        ],
        "summary": "Get common observations for a project",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "continuous_token",
            "in": "query",
            "description": "continuous token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number max to get.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCommonObs"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/categories": {
      "get": {
        "tags": [
          "Modules"
        ],
        "summary": "get modules and categories list",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetModulesCategoriesResults"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/observations/filter": {
      "post": {
        "tags": [
          "Observations"
        ],
        "summary": "Search obsrvation with filter",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GetObservationParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetObservationParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetObservationParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetObservationParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetReducedObservationsResponse2"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/observations": {
      "get": {
        "tags": [
          "Observations"
        ],
        "summary": "Get differential observation ids.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The id of the project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "continuous_token",
            "in": "query",
            "description": "continuous token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number max of observations to get.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetReducedObservations"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Observations"
        ],
        "summary": "create 1 observation",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateObservationParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateObservationParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateObservationParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateObservationParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateObservation"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/observations/{observationId}": {
      "get": {
        "tags": [
          "Observations"
        ],
        "summary": "Get an observation",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The parent project's id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "observationId",
            "in": "path",
            "description": "The observation's id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetObservation"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Observations"
        ],
        "summary": "update observation",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "observationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateObservationParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateObservationParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateObservationParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateObservationParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateObservation"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/observations-priorities": {
      "get": {
        "tags": [
          "Observations"
        ],
        "summary": "Get all the observations priorities for a project",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "continuous_token",
            "in": "query",
            "description": "continuous token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "offset",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number max to get.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPriorities"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/trades/{tradeId}": {
      "get": {
        "tags": [
          "Observations"
        ],
        "summary": "get one trade detail",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tradeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTrade"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/commonobservations/{commonObsId}": {
      "get": {
        "tags": [
          "Observations"
        ],
        "summary": "Get one common observation detail",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commonObsId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObservationCommonObservation"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/status": {
      "get": {
        "tags": [
          "Observations"
        ],
        "summary": "Get statuses for a project",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "continuous_token",
            "in": "query",
            "description": "continuous token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number max to get.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStatuses"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/statuses/{statusId}/next-statuses": {
      "get": {
        "tags": [
          "Observations"
        ],
        "summary": "Get status workflow",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statusId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNextStatuses"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/observations/{observationId}/attach-media": {
      "post": {
        "tags": [
          "Observations"
        ],
        "summary": "link media to observation",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "observationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddMediaObservationParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddMediaObservationParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddMediaObservationParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddMediaObservationParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddMediaObservation"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/observations/{observationId}/messages": {
      "get": {
        "tags": [
          "Observations"
        ],
        "summary": "get observations messages",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "observationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "message_id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "get_newest",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMessages"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Observations"
        ],
        "summary": "push message to 1 observation",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "observationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SetMessageParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetMessageParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetMessageParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetMessageParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddItemMessage"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/observations/report/xls": {
      "post": {
        "tags": [
          "Observations"
        ],
        "summary": "get observations xls report",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateXlsObsParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateXlsObsParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateXlsObsParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateXlsObsParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateXlsObs"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/observations-priorities/{priorityId}": {
      "get": {
        "tags": [
          "Observations"
        ],
        "summary": "Get one priority",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "priorityId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Priority"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/status/{statusId}": {
      "get": {
        "tags": [
          "Observations"
        ],
        "summary": "Get one status",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statusId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponseWithoutFlow"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/observations/{observationId}/full": {
      "get": {
        "tags": [
          "Observations"
        ],
        "summary": "Get observation forpower automate",
        "description": "Get observation detail",
        "operationId": "GetObservationDetail",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "observationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetObservationFull"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/modules/suggestions": {
      "get": {
        "tags": [
          "OrgaModules"
        ],
        "summary": "Get modules suggestion",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetModulesOrgaSuggestion"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/modules": {
      "get": {
        "tags": [
          "OrgaModules"
        ],
        "summary": "get all the organization modules",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetModulesOrga"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "OrgaModules"
        ],
        "summary": "Create a new module",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleOrgaParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleOrgaParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleOrgaParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleOrgaParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleOrga"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/modules/{moduleId}": {
      "put": {
        "tags": [
          "OrgaModules"
        ],
        "summary": "Modify a module",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "moduleId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleOrgaParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleOrgaParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleOrgaParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleOrgaParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleOrga"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/modules/delete": {
      "post": {
        "tags": [
          "OrgaModules"
        ],
        "summary": "Delete modules",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteModuleParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteModuleParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteModuleParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteModuleParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/modules/{moduleId}/link-forms": {
      "post": {
        "tags": [
          "OrgaModules"
        ],
        "summary": "link form template to module + category",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "moduleId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LinkModuleFormsParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkModuleFormsParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkModuleFormsParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LinkModuleFormsParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleOrga"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/modules/{moduleId}/unlink-forms": {
      "post": {
        "tags": [
          "OrgaModules"
        ],
        "summary": "unlink form template in module + category",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "moduleId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LinkModuleFormsParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkModuleFormsParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkModuleFormsParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LinkModuleFormsParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleOrga"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/modules/{moduleId}/categories": {
      "post": {
        "tags": [
          "OrgaModules"
        ],
        "summary": "add category to modules",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "moduleId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleCategoryParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleCategoryParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleCategoryParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleCategoryParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/modules/{moduleId}/categories/{categoryId}": {
      "put": {
        "tags": [
          "OrgaModules"
        ],
        "summary": "update category in module",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "moduleId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "categoryId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleCategoryParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleCategoryParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleCategoryParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleCategoryParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "OrgaModules"
        ],
        "summary": "delete category in module",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "moduleId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "categoryId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v1.0/organizations": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "get organizations ids for user",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "get organization detail",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganization"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/projects": {
      "post": {
        "tags": [
          "Organizations"
        ],
        "summary": "Add a project to the organization.",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "Project parameters.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProject"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get organization's projects.",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number max of projects to get.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset index from where to begin getting projects.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspace_id",
            "in": "query",
            "description": "Workspace id to filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "with_workspace_children",
            "in": "query",
            "description": "Filter with workspace id and its children",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjects"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/priorities": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get organization referential of priorities.",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number max of priorities to get.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset index from where to begin getting priorities.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moduleType",
            "in": "query",
            "description": "Module for witch get the priorities.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationReferentialPriorities"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Organizations"
        ],
        "summary": "Replace the current organization referential of priorities.",
        "description": "Must always send all the priorities.",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "Referential of priorities parameters.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SetOrganizationReferentialPrioritiesParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetOrganizationReferentialPrioritiesParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetOrganizationReferentialPrioritiesParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetOrganizationReferentialPrioritiesParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetOrganizationReferentialPriorities"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/statuses": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get organization referential of statuses.",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number max of statuses to get.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset index from where to begin getting statuses.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationReferentialStatuses"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Organizations"
        ],
        "summary": "Replace the current organization referential of statuses.",
        "description": "Must always send all the statuses.",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "Referential of statuses parameters.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SetOrganizationReferentialStatusesParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetOrganizationReferentialStatusesParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetOrganizationReferentialStatusesParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetOrganizationReferentialStatusesParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetOrganizationReferentialStatuses"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/trades": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get organization referential of trades.",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number max of trades to get.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset index from where to begin getting trades.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationReferentialTrades"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Organizations"
        ],
        "summary": "Add or update trades in organization referential of trades.",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "Trades to add or update.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SetOrganizationReferentialTradesParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetOrganizationReferentialTradesParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetOrganizationReferentialTradesParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetOrganizationReferentialTradesParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetOrganizationReferentialTrades"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Organizations"
        ],
        "summary": "Delete trades in organization referential of trades.",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "Trade ids to delete.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteOrganizationReferentialTradesParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteOrganizationReferentialTradesParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteOrganizationReferentialTradesParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteOrganizationReferentialTradesParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/common-observations": {
      "put": {
        "tags": [
          "Organizations"
        ],
        "summary": "Add or update common observations in organization referential of common observations.",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "Common observations to add or update.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SetOrganizationReferentialCommonObservationsParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetOrganizationReferentialCommonObservationsParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetOrganizationReferentialCommonObservationsParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetOrganizationReferentialCommonObservationsParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetOrganizationReferentialCommonObservations"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Organizations"
        ],
        "summary": "Delete common observations in organization referential of common observations.",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "Common observations to delete.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteOrganizationReferentialCommonObservationsParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteOrganizationReferentialCommonObservationsParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteOrganizationReferentialCommonObservationsParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteOrganizationReferentialCommonObservationsParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/forms": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get organization's form templates",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number max of form templates to get.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset index from where to begin getting form templates.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationReferentialFormTemplates"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Organizations"
        ],
        "summary": "Set organization's form templates visibility",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "Form templates to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SetOrganizationReferentialFormTemplatesParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetOrganizationReferentialFormTemplatesParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetOrganizationReferentialFormTemplatesParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetOrganizationReferentialFormTemplatesParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetOrganizationReferentialFormTemplates"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Organizations"
        ],
        "summary": "Delete organization's form templates",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "Form templates to delete.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteOrganizationReferentialFormTemplatesParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteOrganizationReferentialFormTemplatesParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteOrganizationReferentialFormTemplatesParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteOrganizationReferentialFormTemplatesParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/forms/{formId}": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "get form template content",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "formId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgaForm"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/user-infos/{userId}": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get user infos",
        "description": "Get user detail",
        "operationId": "GetUserDetail",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "the user's id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/forms/{formId}/custom/infos": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get the custom associated with a form template",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "formId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationFormTemplatesCustom"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/forms/{formId}/custom/set": {
      "post": {
        "tags": [
          "Organizations"
        ],
        "summary": "Set the custom associated with a form template",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "formId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SetCustomReportParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetCustomReportParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetCustomReportParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetCustomReportParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/data/config": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "get datesets names list",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDataSets"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Organizations"
        ],
        "summary": "change dataset list",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PutDataSetsParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutDataSetsParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PutDataSetsParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PutDataSetsParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDataSets"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/data/config/dataset": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "get one dataset content",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/data/config/dataseturl": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "get 1 dataset url",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDataSetUrl"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/datareferentials": {
      "get": {
        "tags": [
          "OrganizationsDataReferential"
        ],
        "summary": "get all",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "continuous_token",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "with_deleted",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationReferentials"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "OrganizationsDataReferential"
        ],
        "summary": "create",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationReferentialParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationReferentialParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationReferentialParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationReferentialParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationReferential"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/datareferentials/{referentialId}": {
      "get": {
        "tags": [
          "OrganizationsDataReferential"
        ],
        "summary": "get one",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "referentialId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationReferential"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "OrganizationsDataReferential"
        ],
        "summary": "delete a referential",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "referentialId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationReferential"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/datareferentials/{referentialId}/set-referential": {
      "put": {
        "tags": [
          "OrganizationsDataReferential"
        ],
        "summary": "Update referential media",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "referentialId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationReferentialPutParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationReferentialPutParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationReferentialPutParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationReferentialPutParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationReferential"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/datareferentials/{referentialId}/set-name": {
      "put": {
        "tags": [
          "OrganizationsDataReferential"
        ],
        "summary": "rename a referential",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "referentialId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationReferentialRenameParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationReferentialRenameParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationReferentialRenameParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationReferentialRenameParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationReferential"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/phases": {
      "get": {
        "tags": [
          "Phases"
        ],
        "summary": "get phases list",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "continuous_token",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "with_deleted",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPhases"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Phases"
        ],
        "summary": "create a phase",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "Order is mandatory is should be uniq",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhaseParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhaseParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhaseParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhaseParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePhase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/phases/{phaseId}": {
      "put": {
        "tags": [
          "Phases"
        ],
        "summary": "update a phase",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phaseId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePhaseParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePhaseParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePhaseParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePhaseParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePhase"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Phases"
        ],
        "summary": "delete a phase",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phaseId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "Phases"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phaseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Phase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/medias/uploads": {
      "post": {
        "tags": [
          "ProjectMedias"
        ],
        "summary": "upload media",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Uploads"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1.0/projects/{projectId}/medias/uploadinit": {
      "post": {
        "tags": [
          "ProjectMedias"
        ],
        "summary": "call media upload initialize endpoint",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UploadChunkInitParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadChunkInitParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadChunkInitParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UploadChunkInitParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadChunkInit"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1.0/projects/{projectId}/medias/{mediaId}/uploadappend": {
      "post": {
        "tags": [
          "ProjectMedias"
        ],
        "summary": "Call append block to upload media endpoint",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mediaId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "deprecated": true
      }
    },
    "/api/v1.0/projects/{projectId}/medias/{mediaId}/uploadterminate": {
      "post": {
        "tags": [
          "ProjectMedias"
        ],
        "summary": "Call finalize media upload endpoint",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mediaId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UploadChunkFinalizeParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadChunkFinalizeParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadChunkFinalizeParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UploadChunkFinalizeParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Media"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1.0/projects/{projectId}/medias/{mediaId}/uploadabort": {
      "post": {
        "tags": [
          "ProjectMedias"
        ],
        "summary": "Call abort media upload endpoint",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mediaId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UploadChunkFinalizeParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadChunkFinalizeParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadChunkFinalizeParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UploadChunkFinalizeParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Media"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/v1.0/projects/{projectId}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get a project.",
        "description": "Get project detail",
        "operationId": "GetProjectDetail",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The id of the project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProject"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Update a project.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The id of the project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "Project parameters.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjectParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjectParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjectParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjectParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateProject"
                }
              }
            }
          },
          "206": {
            "description": "Partial Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateProject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/roles": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get project roles.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The id of the project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number max of project roles to get.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset index from where to begin getting project roles.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectRoles"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/members": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get members.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The id of the project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "continuous_token",
            "in": "query",
            "description": "continuous token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number max of members to get.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMembers"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Add members to a project.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The id of the project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "doNotSendEmail",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "List of invitations.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddMembersParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddMembersParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddMembersParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddMembersParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddMembers"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/remove-members": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "remove a usr from project",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DelMembersParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DelMembersParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DelMembersParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DelMembersParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectRoles"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/projects/{projectId}/change-members-role": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "change user role in a project",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMembersRoleParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMembersRoleParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMembersRoleParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMembersRoleParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectRole"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/time-zones": {
      "get": {
        "tags": [
          "TimeZones"
        ],
        "summary": "Get list of time zones.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number max of time zones to get.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset index from where to begin getting time zones.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTimeZones"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/webhooks/getevents": {
      "get": {
        "tags": [
          "Webhook"
        ],
        "summary": "get events type list",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookEventList"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/webhooks/organization/{organizationId}": {
      "get": {
        "tags": [
          "Webhook"
        ],
        "summary": "get the hooks for an organization",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookList"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/webhooks/{hookId}": {
      "get": {
        "tags": [
          "Webhook"
        ],
        "summary": "get a hook detail",
        "parameters": [
          {
            "name": "hookId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Webhook"
        ],
        "summary": "delete a hook",
        "parameters": [
          {
            "name": "hookId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      },
      "put": {
        "tags": [
          "Webhook"
        ],
        "summary": "update a hook",
        "parameters": [
          {
            "name": "hookId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookUpdateParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookUpdateParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookUpdateParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookUpdateParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/webhooks": {
      "post": {
        "tags": [
          "Webhook"
        ],
        "summary": "create a new hook",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookCreateParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookCreateParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookCreateParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookCreateParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/webhooks/ev/{eventId}": {
      "post": {
        "tags": [
          "Webhook"
        ],
        "summary": "webhook creation for powerautomate consumer",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookCreateParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookCreateParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookCreateParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookCreateParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/workspaces": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "summary": "Get workspaces",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWorkspaces"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Workspaces"
        ],
        "summary": "Create 1 workspace",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkspaceParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkspaceParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkspaceParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkspaceParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workspace"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/workspaces/{workspaceId}": {
      "put": {
        "tags": [
          "Workspaces"
        ],
        "summary": "Update 1 workspace parameters",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWorkspaceParameter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWorkspaceParameter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWorkspaceParameter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWorkspaceParameter"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workspace"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Workspaces"
        ],
        "summary": "Get 1 workspace parameters",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workspace"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/workspaces/{workspaceId}/members": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "summary": "list members of 1 workspace",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWorkspaceMembers"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/workspaces/{workspaceId}/add-member": {
      "post": {
        "tags": [
          "Workspaces"
        ],
        "summary": "add member in workspace",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceAddMemberParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceAddMemberParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceAddMemberParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceAddMemberParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWorkspaceMembers"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/workspaces/{workspaceId}/remove-member": {
      "delete": {
        "tags": [
          "Workspaces"
        ],
        "summary": "Remove member from workspace",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceDelMemberParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceDelMemberParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceDelMemberParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceDelMemberParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWorkspaceMembers"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/workspaces/{workspaceId}/modules": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "summary": "et all modules for a workspace",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetModulesOrga"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Workspaces"
        ],
        "summary": "Create a module in a workspace",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleOrgaParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleOrgaParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleOrgaParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleOrgaParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleOrga"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/workspaces/{workspaceId}/modules/{moduleId}": {
      "put": {
        "tags": [
          "Workspaces"
        ],
        "summary": "modify a workspace module",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "moduleId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleOrgaParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleOrgaParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleOrgaParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleOrgaParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleOrga"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/workspaces/{workspaceId}/modules/delete": {
      "post": {
        "tags": [
          "Workspaces"
        ],
        "summary": "Delete modules in workspace",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteModuleParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteModuleParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteModuleParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteModuleParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/workspaces/{workspaceId}/modules/{moduleId}/link-forms": {
      "post": {
        "tags": [
          "Workspaces"
        ],
        "summary": "link forms to a module in a ws",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "moduleId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LinkModuleFormsParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkModuleFormsParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkModuleFormsParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LinkModuleFormsParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleOrga"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/workspaces/{workspaceId}/modules/{moduleId}/unlink-forms": {
      "post": {
        "tags": [
          "Workspaces"
        ],
        "summary": "unlink forms for a module",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "moduleId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LinkModuleFormsParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkModuleFormsParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkModuleFormsParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LinkModuleFormsParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleOrga"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/workspaces/{workspaceId}/modules/suggestions": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "summary": "get ws modules suggestion for project creation",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetModulesOrgaSuggestion"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/workspaces/{workspaceId}/priorities": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "summary": "get ws priorities",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moduleType",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationReferentialPriorities"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Workspaces"
        ],
        "summary": "Replace the priorities list for a ws",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SetOrganizationReferentialPrioritiesParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetOrganizationReferentialPrioritiesParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetOrganizationReferentialPrioritiesParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetOrganizationReferentialPrioritiesParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetOrganizationReferentialPriorities"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/workspaces/{workspaceId}/forms": {
      "get": {
        "tags": [
          "Workspaces"
        ],
        "summary": "get forms template in ws",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationReferentialFormTemplates"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Workspaces"
        ],
        "summary": "delete form template in ws",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteOrganizationReferentialFormTemplatesParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteOrganizationReferentialFormTemplatesParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteOrganizationReferentialFormTemplatesParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteOrganizationReferentialFormTemplatesParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/workspaces/{workspaceId}/modules/{moduleId}/categories": {
      "post": {
        "tags": [
          "Workspaces"
        ],
        "summary": "create  a category",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "moduleId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleCategoryParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleCategoryParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleCategoryParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleCategoryParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/workspaces/{workspaceId}/modules/{moduleId}/categories/{categoryId}": {
      "put": {
        "tags": [
          "Workspaces"
        ],
        "summary": "update a category",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "moduleId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "categoryId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleCategoryParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleCategoryParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleCategoryParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModuleCategoryParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Workspaces"
        ],
        "summary": "delete a category",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "moduleId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "categoryId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v1.0/organizations/{organizationId}/workspaces/{workspaceId}/forms/{formId}/custom/set": {
      "post": {
        "tags": [
          "Workspaces"
        ],
        "summary": "Get the custom associated with a form template\r\nthe template sould not be inherited",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "formId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language usage",
            "allowEmptyValue": true,
            "schema": {
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "X-UserId",
            "in": "header",
            "description": "x-userid",
            "allowEmptyValue": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SetCustomReportParameters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetCustomReportParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetCustomReportParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetCustomReportParameters"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddItemFormAnswerParameters": {
        "type": "object",
        "properties": {
          "form_instance_id": {
            "type": "string",
            "format": "uuid"
          },
          "form_answer_id": {
            "type": "string",
            "format": "uuid"
          },
          "target_id": {
            "type": "string",
            "format": "uuid"
          },
          "target_type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddItemMessage": {
        "type": "object",
        "properties": {
          "message_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddLogoParameters": {
        "required": [
          "media_id",
          "media_name"
        ],
        "type": "object",
        "properties": {
          "media_id": {
            "type": "string"
          },
          "media_name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AddMediaFormAnswerParameters": {
        "type": "object",
        "properties": {
          "media_id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "AddMediaObservation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32"
          },
          "media_resource": {
            "$ref": "#/components/schemas/Media"
          }
        },
        "additionalProperties": false
      },
      "AddMediaObservationParameters": {
        "type": "object",
        "properties": {
          "media_id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "AddMembers": {
        "type": "object",
        "properties": {
          "project_roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectRole"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddMembersParameters": {
        "required": [
          "invitations"
        ],
        "type": "object",
        "properties": {
          "invitations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvitationParameters"
            }
          }
        },
        "additionalProperties": false
      },
      "AddOrgaMembersParameters": {
        "type": "object",
        "properties": {
          "role_users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddOrgaRoleMembersParameters"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddOrgaRoleMembersParameters": {
        "type": "object",
        "properties": {
          "role_id": {
            "type": "string",
            "nullable": true
          },
          "users_info": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Answer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "form_field_id": {
            "type": "string",
            "format": "uuid"
          },
          "form_template_instance_id": {
            "type": "string",
            "format": "uuid"
          },
          "num": {
            "type": "string",
            "nullable": true
          },
          "value_string": {
            "type": "string",
            "nullable": true
          },
          "value_numeric": {
            "type": "string",
            "nullable": true
          },
          "value_boolean": {
            "type": "string",
            "nullable": true
          },
          "value_date1": {
            "type": "string",
            "nullable": true
          },
          "value_time1": {
            "type": "string",
            "nullable": true
          },
          "value_form_template_instance_id": {
            "type": "string",
            "nullable": true
          },
          "na_value": {
            "type": "boolean"
          },
          "is_valid_content": {
            "type": "boolean"
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "client_created_at": {
            "type": "string",
            "format": "date-time"
          },
          "client_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "form_answer_form_field_choices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnswerChoice"
            },
            "nullable": true
          },
          "form_answer_media_resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnswerMediaResource"
            },
            "nullable": true
          },
          "form_field_choice_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true,
            "readOnly": true
          },
          "form_instance_links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnswerLinkedItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AnswerChoice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "form_field_choice_id": {
            "type": "string",
            "format": "uuid"
          },
          "form_answer_id": {
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "AnswerLinkedItem": {
        "type": "object",
        "properties": {
          "object_id": {
            "type": "string",
            "format": "uuid"
          },
          "form_instance_link_type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AnswerMediaResource": {
        "type": "object",
        "properties": {
          "media_resource_id": {
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "mime_type": {
            "type": "string",
            "nullable": true
          },
          "bytes_size": {
            "type": "integer",
            "format": "int64"
          },
          "file_name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CaseSensitive": {
        "enum": [
          "ConvertInUppercase",
          "ConvertInLowercase",
          "InitCapWholeText",
          "InitCapEachWord"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "CaseSensitive",
          "modelAsString": true
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "container_id": {
            "type": "string",
            "nullable": true
          },
          "parent_id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ChangeGroupMembers": {
        "type": "object",
        "properties": {
          "group_members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupMember"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChangeGroupMembersParameters": {
        "required": [
          "user_ids"
        ],
        "type": "object",
        "properties": {
          "user_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "CommonObservation": {
        "type": "object",
        "properties": {
          "trade_id": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizedLabel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommonObservationParameters": {
        "required": [
          "names",
          "trade_id"
        ],
        "type": "object",
        "properties": {
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizedLabelParameters"
            }
          },
          "trade_id": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Company": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "user_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyMembersListParameters": {
        "type": "object",
        "properties": {
          "user_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateCommonObsParameters": {
        "type": "object",
        "properties": {
          "project_id": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "trade_id": {
            "type": "string",
            "format": "uuid"
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizedLabelParameters"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateCompanies": {
        "type": "object",
        "properties": {
          "companies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Company"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateCompaniesParameters": {
        "required": [
          "companies"
        ],
        "type": "object",
        "properties": {
          "companies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCompanyParameters"
            }
          }
        },
        "additionalProperties": false
      },
      "CreateCompanyParameters": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "reference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateDocument": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parent_id": {
            "type": "string",
            "nullable": true
          },
          "media_resource": {
            "$ref": "#/components/schemas/Media"
          },
          "enabled": {
            "type": "boolean"
          },
          "file_type": {
            "type": "string",
            "nullable": true
          },
          "item_source": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateDocumentParameters": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "parent_id": {
            "type": "string",
            "nullable": true
          },
          "media_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateFolderParameters": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "parent_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateFormAnswerParameters": {
        "required": [
          "field_id",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "field_id": {
            "type": "string",
            "format": "uuid"
          },
          "form_instance_id": {
            "type": "string",
            "nullable": true
          },
          "form_template_instance_id": {
            "type": "string",
            "nullable": true
          },
          "create_form_template_instance": {
            "type": "boolean"
          },
          "create_form_template_instance_for_grid": {
            "type": "boolean"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "value_string": {
            "type": "string",
            "nullable": true
          },
          "value_numeric": {
            "type": "string",
            "nullable": true
          },
          "value_boolean": {
            "type": "string",
            "nullable": true
          },
          "value_date1": {
            "type": "string",
            "nullable": true
          },
          "value_time1": {
            "type": "string",
            "nullable": true
          },
          "array_field_choices": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "na_value": {
            "type": "boolean"
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "value_form_template_instance_id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "CreateFormInstance": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "form_id": {
            "type": "string",
            "nullable": true
          },
          "status_id": {
            "type": "string",
            "nullable": true
          },
          "priority_id": {
            "type": "string",
            "nullable": true
          },
          "plan_id": {
            "type": "string",
            "nullable": true
          },
          "position_x": {
            "type": "string",
            "nullable": true
          },
          "position_y": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "nullable": true
          },
          "assignee_id": {
            "type": "string",
            "nullable": true
          },
          "company_id": {
            "type": "string",
            "nullable": true
          },
          "due_date": {
            "type": "string",
            "nullable": true
          },
          "client_created_at": {
            "type": "string",
            "format": "date-time"
          },
          "client_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "module_id": {
            "type": "string",
            "format": "uuid"
          },
          "phase_id": {
            "type": "string",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateFormInstanceParameters": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "form_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "priority_id": {
            "type": "string",
            "nullable": true
          },
          "status_id": {
            "type": "string",
            "nullable": true
          },
          "assignee_id": {
            "type": "string",
            "nullable": true
          },
          "company_id": {
            "type": "string",
            "nullable": true
          },
          "plan_id": {
            "type": "string",
            "nullable": true
          },
          "due_date": {
            "type": "string",
            "nullable": true
          },
          "module_id": {
            "type": "string",
            "format": "uuid"
          },
          "phase_id": {
            "type": "string",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "nullable": true
          },
          "position_x": {
            "type": "string",
            "nullable": true
          },
          "position_y": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "group_members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupMember"
            },
            "nullable": true
          },
          "group_plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupPlan"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateGroupParameters": {
        "required": [
          "name",
          "user_ids"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "user_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "plan_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateGroups": {
        "type": "object",
        "properties": {
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateGroup"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateGroupsParameters": {
        "required": [
          "groups"
        ],
        "type": "object",
        "properties": {
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateGroupParameters"
            }
          }
        },
        "additionalProperties": false
      },
      "CreateModule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "project_id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "number",
            "format": "double"
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizedLabel"
            },
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean"
          },
          "settings": {
            "$ref": "#/components/schemas/ModuleSettings"
          }
        },
        "additionalProperties": false
      },
      "CreateModuleBySuggestionParameters": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "project_id": {
            "type": "string",
            "nullable": true
          },
          "from_module_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateModuleForm": {
        "type": "object",
        "properties": {
          "container_id": {
            "type": "string",
            "nullable": true
          },
          "container_type": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "project_id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "number",
            "format": "double"
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizedLabel"
            },
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateModuleMeeting": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "project_id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "number",
            "format": "double"
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizedLabel"
            },
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateModuleMeetingParameters": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateModuleOrgaParameters": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "visibility": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateModuleParameters": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "project_id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "$ref": "#/components/schemas/CreateModuleSettingsParameters"
          }
        },
        "additionalProperties": false
      },
      "CreateModuleSettingsParameters": {
        "type": "object",
        "properties": {
          "is_observation_library_mandatory": {
            "type": "string",
            "nullable": true
          },
          "is_description_mandatory": {
            "type": "string",
            "nullable": true
          },
          "is_photo_mandatory": {
            "type": "string",
            "nullable": true
          },
          "is_company_mandatory": {
            "type": "string",
            "nullable": true
          },
          "is_group_mandatory": {
            "type": "string",
            "nullable": true
          },
          "due_date_days_offset": {
            "type": "string",
            "nullable": true
          },
          "is_observation_library_enabled": {
            "type": "string",
            "nullable": true
          },
          "is_description_enabled": {
            "type": "string",
            "nullable": true
          },
          "is_photo_enabled": {
            "type": "string",
            "nullable": true
          },
          "is_company_enabled": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateObservation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "project_id": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "status_id": {
            "type": "string",
            "nullable": true
          },
          "priority_id": {
            "type": "string",
            "nullable": true
          },
          "plan_id": {
            "type": "string",
            "nullable": true
          },
          "position_x": {
            "type": "string",
            "nullable": true
          },
          "position_y": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "nullable": true
          },
          "assignee_id": {
            "type": "string",
            "nullable": true
          },
          "company_id": {
            "type": "string",
            "nullable": true
          },
          "trade_id": {
            "type": "string",
            "nullable": true
          },
          "common_observation_id": {
            "type": "string",
            "nullable": true
          },
          "due_date": {
            "type": "string",
            "nullable": true
          },
          "client_created_at": {
            "type": "string",
            "format": "date-time"
          },
          "module_id": {
            "type": "string",
            "nullable": true
          },
          "phase_id": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateObservationParameters": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "trade_id": {
            "type": "string",
            "nullable": true
          },
          "common_observation_id": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "priority_id": {
            "type": "string",
            "nullable": true
          },
          "status_id": {
            "type": "string",
            "nullable": true
          },
          "assignee_id": {
            "type": "string",
            "nullable": true
          },
          "company_id": {
            "type": "string",
            "nullable": true
          },
          "plan_id": {
            "type": "string",
            "nullable": true
          },
          "due_date": {
            "type": "string",
            "nullable": true
          },
          "module_id": {
            "type": "string",
            "nullable": true
          },
          "phase_id": {
            "type": "string",
            "nullable": true
          },
          "position_x": {
            "type": "string",
            "nullable": true
          },
          "position_y": {
            "type": "string",
            "nullable": true
          },
          "group_id": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePhase": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "order": {
            "type": "number",
            "format": "double"
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizedLabel"
            },
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CreatePhaseParameters": {
        "type": "object",
        "properties": {
          "project_id": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "number",
            "format": "double"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePlanFromDocumentParameters": {
        "required": [
          "document_id"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "document_id": {
            "type": "string",
            "format": "uuid"
          },
          "folder_id": {
            "type": "string",
            "nullable": true
          },
          "plan_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePlanParameters": {
        "required": [
          "media_id",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "media_id": {
            "type": "string",
            "format": "uuid"
          },
          "folder_id": {
            "type": "string",
            "nullable": true
          },
          "plan_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateProject": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "nullable": true
          },
          "time_zone": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "project_id": {
            "type": "string",
            "nullable": true
          },
          "organization_id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "case_number": {
            "type": "string",
            "nullable": true
          },
          "workspace_id": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "member_count": {
            "type": "integer",
            "format": "int32"
          },
          "is_archived": {
            "type": "boolean"
          },
          "media_resource": {
            "$ref": "#/components/schemas/Media"
          },
          "current_user_in_project": {
            "type": "boolean"
          },
          "is_active": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateProjectParameters": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "time_zone": {
            "type": "string",
            "nullable": true
          },
          "case_number": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "end_date": {
            "type": "string",
            "nullable": true
          },
          "workspace_id": {
            "type": "string",
            "nullable": true
          },
          "module_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateTradeParameters": {
        "type": "object",
        "properties": {
          "project_id": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "module_id": {
            "type": "string",
            "format": "uuid"
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizedLabelParameters"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateWorkspaceParameters": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "client_reference": {
            "type": "string",
            "nullable": true
          },
          "parent_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DelLogoParameters": {
        "required": [
          "logo_ids"
        ],
        "type": "object",
        "properties": {
          "logo_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "DelMediaFormAnswerParameters": {
        "type": "object",
        "properties": {
          "media_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DelMembersParameters": {
        "required": [
          "user_ids"
        ],
        "type": "object",
        "properties": {
          "user_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "DelOrgaMembersParameters": {
        "type": "object",
        "properties": {
          "user_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeleteCommonObservationParameters": {
        "required": [
          "id",
          "trade_id"
        ],
        "type": "object",
        "properties": {
          "trade_id": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "DeleteCompaniesParameters": {
        "required": [
          "company_ids"
        ],
        "type": "object",
        "properties": {
          "company_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "additionalProperties": false
      },
      "DeleteModuleParameters": {
        "type": "object",
        "properties": {
          "module_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeleteOrganizationReferentialCommonObservationsParameters": {
        "required": [
          "common_observations"
        ],
        "type": "object",
        "properties": {
          "common_observations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeleteCommonObservationParameters"
            }
          }
        },
        "additionalProperties": false
      },
      "DeleteOrganizationReferentialFormTemplatesParameters": {
        "type": "object",
        "properties": {
          "form_template_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeleteOrganizationReferentialTradesParameters": {
        "required": [
          "trade_ids"
        ],
        "type": "object",
        "properties": {
          "trade_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "additionalProperties": false
      },
      "Document": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parent_id": {
            "type": "string",
            "nullable": true
          },
          "media_resource": {
            "$ref": "#/components/schemas/Media"
          },
          "enabled": {
            "type": "boolean"
          },
          "file_type": {
            "type": "string",
            "nullable": true
          },
          "item_source": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Error": {
        "type": "object",
        "properties": {
          "statut": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "api_code": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Folder": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parent_id": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "sources_contained": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Form": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "module_id": {
            "type": "string",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "FormField": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "form_template_section_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Translation"
            },
            "nullable": true
          },
          "descriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Translation"
            },
            "nullable": true
          },
          "num": {
            "type": "integer",
            "format": "int32"
          },
          "type_field_data": {
            "$ref": "#/components/schemas/TypeFieldData"
          },
          "type_field_presentation": {
            "$ref": "#/components/schemas/TypeFieldPresentation"
          },
          "prefix_field": {
            "type": "string",
            "nullable": true
          },
          "suffix_field": {
            "type": "string",
            "nullable": true
          },
          "complementary_text": {
            "type": "string",
            "nullable": true
          },
          "complementary_text_translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Translation"
            },
            "nullable": true
          },
          "qr_code_mapping_key": {
            "type": "string",
            "nullable": true
          },
          "qr_code_mapping_position": {
            "type": "string",
            "nullable": true
          },
          "display_event": {
            "type": "string",
            "nullable": true
          },
          "required": {
            "type": "boolean"
          },
          "internal_code": {
            "type": "string",
            "nullable": true
          },
          "form_field_sa_numeric": {
            "$ref": "#/components/schemas/FormFieldSaNumeric"
          },
          "form_field_sa_formula": {
            "$ref": "#/components/schemas/FormFieldSaFormula"
          },
          "form_field_sa_button": {
            "$ref": "#/components/schemas/FormFieldSaButton"
          },
          "form_field_sa_calendar": {
            "$ref": "#/components/schemas/FormFieldSaCalendar"
          },
          "form_field_sa_control": {
            "$ref": "#/components/schemas/FormFieldSaControl"
          },
          "form_field_sa_text": {
            "$ref": "#/components/schemas/FormFieldSaText"
          },
          "form_field_sa_resource": {
            "$ref": "#/components/schemas/FormFieldSaResource"
          },
          "form_field_item_referentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormFieldItemReferential"
            },
            "nullable": true
          },
          "form_field_choices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormFieldChoice"
            },
            "nullable": true
          },
          "answer": {
            "$ref": "#/components/schemas/Answer"
          },
          "answers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Answer"
            },
            "nullable": true
          },
          "grid_answers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GridInstance"
            },
            "nullable": true
          },
          "form_template_link": {
            "$ref": "#/components/schemas/FormTemplateInstance"
          },
          "form_template_link_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FormFieldChoice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "form_field_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "num": {
            "type": "integer",
            "format": "int32"
          },
          "value_string": {
            "type": "string",
            "nullable": true
          },
          "value_numeric": {
            "type": "string",
            "nullable": true
          },
          "is_default_value": {
            "type": "boolean"
          },
          "evaluate_value": {
            "type": "string",
            "nullable": true
          },
          "external_code": {
            "type": "string",
            "nullable": true
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Translation"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FormFieldItemReferential": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "form_field_id": {
            "type": "string",
            "format": "uuid"
          },
          "item_referential_id": {
            "type": "string",
            "format": "uuid"
          },
          "item_referential": {
            "$ref": "#/components/schemas/ItemReferential"
          }
        },
        "additionalProperties": false
      },
      "FormFieldSaButton": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "form_field_id": {
            "type": "string",
            "format": "uuid"
          },
          "activate_if_all_field_filled": {
            "type": "boolean"
          },
          "label_after_click": {
            "type": "string",
            "nullable": true
          },
          "lock_all_previous_section": {
            "type": "boolean"
          },
          "form_status_id": {
            "type": "string",
            "nullable": true
          },
          "form_field_sa_button_sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormFieldSaButtonSection"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FormFieldSaButtonSection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "form_field_sa_button_id": {
            "type": "string",
            "format": "uuid"
          },
          "form_template_section_id": {
            "type": "string",
            "format": "uuid"
          },
          "is_locked": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FormFieldSaCalendar": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "form_field_id": {
            "type": "string",
            "format": "uuid"
          },
          "format_calendar": {
            "$ref": "#/components/schemas/FormatCalendar"
          },
          "default_value": {
            "type": "string",
            "nullable": true
          },
          "set_as_period": {
            "type": "boolean"
          },
          "minutes_before": {
            "type": "string",
            "nullable": true
          },
          "minutes_after": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FormFieldSaControl": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "form_field_id": {
            "type": "string",
            "format": "uuid"
          },
          "na_values_allowed": {
            "type": "boolean"
          },
          "presentation": {
            "$ref": "#/components/schemas/FormFieldSaControlPresentation"
          },
          "min_answers": {
            "type": "string",
            "nullable": true
          },
          "max_answers": {
            "type": "string",
            "nullable": true
          },
          "inline_display": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FormFieldSaControlPresentation": {
        "enum": [
          "WithValue",
          "WithCheck",
          "WithEmoji",
          "WithScale",
          "DropDown",
          "RadioButton",
          "CheckBox",
          "WithFeedback"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "FormFieldSaControlPresentation",
          "modelAsString": true
        }
      },
      "FormFieldSaFormula": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "form_field_id": {
            "type": "string",
            "format": "uuid"
          },
          "formula": {
            "type": "string",
            "nullable": true
          },
          "field_sa_formula_form_fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormFieldSaFormulaFormField"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FormFieldSaFormulaFormField": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "form_field_id": {
            "type": "string",
            "format": "uuid"
          },
          "num": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "FormFieldSaNumeric": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "form_field_id": {
            "type": "string",
            "format": "uuid"
          },
          "greater_than": {
            "type": "string",
            "nullable": true
          },
          "greater_or_equal": {
            "type": "boolean"
          },
          "less_than": {
            "type": "string",
            "nullable": true
          },
          "less_or_equal": {
            "type": "boolean"
          },
          "number_decimals": {
            "type": "integer",
            "format": "int64"
          },
          "default_value": {
            "type": "string",
            "nullable": true
          },
          "thousand_separator": {
            "type": "boolean"
          },
          "allow_negative": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FormFieldSaResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "form_field_id": {
            "type": "string",
            "format": "uuid"
          },
          "only_images": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FormFieldSaText": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "form_field_id": {
            "type": "string",
            "format": "uuid"
          },
          "min_length": {
            "type": "string",
            "nullable": true
          },
          "max_length": {
            "type": "string",
            "nullable": true
          },
          "only_text": {
            "type": "boolean"
          },
          "default_value": {
            "type": "string",
            "nullable": true
          },
          "default_value_translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Translation"
            },
            "nullable": true
          },
          "case_sensitive": {
            "$ref": "#/components/schemas/CaseSensitive"
          },
          "contains_text": {
            "type": "string",
            "nullable": true
          },
          "start_with": {
            "type": "string",
            "nullable": true
          },
          "end_with": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FormInstance": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "form_id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "project_id": {
            "type": "string",
            "nullable": true
          },
          "status_id": {
            "type": "string",
            "nullable": true
          },
          "assignee_id": {
            "type": "string",
            "nullable": true
          },
          "assigned_company_id": {
            "type": "string",
            "nullable": true
          },
          "priority_id": {
            "type": "string",
            "nullable": true
          },
          "due_date": {
            "type": "string",
            "nullable": true
          },
          "plan_id": {
            "type": "string",
            "nullable": true
          },
          "position_x": {
            "type": "string",
            "nullable": true
          },
          "position_y": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "nullable": true
          },
          "num": {
            "type": "integer",
            "format": "int32"
          },
          "client_created_at": {
            "type": "string",
            "nullable": true
          },
          "client_updated_at": {
            "type": "string",
            "nullable": true
          },
          "phase_id": {
            "type": "string",
            "nullable": true
          },
          "module_id": {
            "type": "string",
            "nullable": true
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          },
          "deleted_by": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true
          },
          "deleted_at": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "category_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FormInstanceAnswer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "form_template_instance_id": {
            "type": "string",
            "nullable": true
          },
          "parts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormPart"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FormInstanceLinkedItems": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FormInstancePriority": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FormInstanceStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FormPart": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "form_template_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Translation"
            },
            "nullable": true
          },
          "descriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Translation"
            },
            "nullable": true
          },
          "num": {
            "type": "integer",
            "format": "int32"
          },
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormSection"
            },
            "nullable": true
          },
          "internal_code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FormSection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "part_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Translation"
            },
            "nullable": true
          },
          "descriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Translation"
            },
            "nullable": true
          },
          "num": {
            "type": "integer",
            "format": "int32"
          },
          "qr_code": {
            "type": "boolean"
          },
          "qr_code_format": {
            "type": "string",
            "nullable": true
          },
          "qr_code_separator_information": {
            "type": "string",
            "nullable": true
          },
          "qr_code_separator_key_value": {
            "type": "string",
            "nullable": true
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormField"
            },
            "nullable": true
          },
          "internal_code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FormTemplate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizedLabel"
            },
            "nullable": true
          },
          "form_template_languages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormTemplateLanguage"
            },
            "nullable": true
          },
          "visibility": {
            "$ref": "#/components/schemas/FormVisibility"
          },
          "is_inherited": {
            "type": "boolean"
          },
          "family_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FormTemplateInstance": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Translation"
            },
            "nullable": true
          },
          "parent_id": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "parts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormPart"
            },
            "nullable": true
          },
          "progress": {
            "type": "integer",
            "format": "int32"
          },
          "internal_code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FormTemplateLanguage": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "nullable": true
          },
          "is_default": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FormVisibility": {
        "enum": [
          "Default",
          "Available",
          "NotAvailable"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "FormVisibility",
          "modelAsString": true
        }
      },
      "FormatCalendar": {
        "enum": [
          "DateOnly",
          "DateAndTime",
          "TimeOnly"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "FormatCalendar",
          "modelAsString": true
        }
      },
      "GenerateCustomReport": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GenerateCustomReportParameters": {
        "type": "object",
        "properties": {
          "output_file_format": {
            "type": "string",
            "nullable": true
          },
          "form_instance_id": {
            "type": "string",
            "format": "uuid"
          },
          "custom_template_id": {
            "type": "string",
            "nullable": true
          },
          "time_zone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GeneratePdfUnitReport": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "report": {
            "type": "string",
            "nullable": true
          },
          "splits": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GeneratePdfUnitReportParameters": {
        "type": "object",
        "properties": {
          "form_instance_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "module_id": {
            "type": "string",
            "nullable": true
          },
          "time_zone": {
            "type": "string",
            "nullable": true
          },
          "status_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "priority_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "form_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "plan_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "folder_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "assignee_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "assigned_company_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "creator_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "due_date_from": {
            "type": "string",
            "nullable": true
          },
          "due_date_to": {
            "type": "string",
            "nullable": true
          },
          "updated_at_from": {
            "type": "string",
            "nullable": true
          },
          "updated_at_to": {
            "type": "string",
            "nullable": true
          },
          "generation_type": {
            "$ref": "#/components/schemas/GenerationType"
          },
          "logo1_url": {
            "type": "string",
            "nullable": true
          },
          "logo2_url": {
            "type": "string",
            "nullable": true
          },
          "image_size": {
            "$ref": "#/components/schemas/ImageSizeEnum"
          },
          "with_linked_items": {
            "type": "boolean"
          },
          "with_linked_items_location": {
            "type": "boolean"
          },
          "only_fields_with_values": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GenerateXlsForm": {
        "type": "object",
        "properties": {
          "file_name": {
            "type": "string",
            "nullable": true
          },
          "file_stream": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "content_type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GenerateXlsFormParameters": {
        "type": "object",
        "properties": {
          "form_instance_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "time_zone": {
            "type": "string",
            "nullable": true
          },
          "status_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "module_id": {
            "type": "string",
            "nullable": true
          },
          "priority_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "form_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "plan_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "folder_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "assignee_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "assigned_company_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "creator_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "due_date_from": {
            "type": "string",
            "nullable": true
          },
          "due_date_to": {
            "type": "string",
            "nullable": true
          },
          "updated_at_from": {
            "type": "string",
            "nullable": true
          },
          "updated_at_to": {
            "type": "string",
            "nullable": true
          },
          "search_term": {
            "type": "string",
            "nullable": true
          },
          "group_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "phase_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GenerateXlsObs": {
        "type": "object",
        "properties": {
          "file_name": {
            "type": "string",
            "nullable": true
          },
          "file_stream": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "content_type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GenerateXlsObsParameters": {
        "type": "object",
        "properties": {
          "module_id": {
            "type": "string",
            "nullable": true
          },
          "search_term": {
            "type": "string",
            "nullable": true
          },
          "time_zone": {
            "type": "string",
            "nullable": true
          },
          "status_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "priority_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "trade_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "plan_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "assignee_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "assigned_company_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "creator_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "group_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "due_date_from": {
            "type": "string",
            "nullable": true
          },
          "due_date_to": {
            "type": "string",
            "nullable": true
          },
          "created_at_from": {
            "type": "string",
            "nullable": true
          },
          "created_at_to": {
            "type": "string",
            "nullable": true
          },
          "observation_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "phase_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GenerationType": {
        "enum": [
          "PDF",
          "HTML"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "GenerationType",
          "modelAsString": true
        }
      },
      "GetCommonObs": {
        "type": "object",
        "properties": {
          "common_observations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObservationCommonObservation"
            },
            "nullable": true
          },
          "need_to_relaunch": {
            "type": "boolean"
          },
          "continuous_token": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total_count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetCompanies": {
        "type": "object",
        "properties": {
          "companies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Company"
            },
            "nullable": true
          },
          "need_to_relaunch": {
            "type": "boolean"
          },
          "continuous_token": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total_count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetCompany": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "user_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetDocuments": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            },
            "nullable": true
          },
          "need_to_relaunch": {
            "type": "boolean"
          },
          "continuous_token": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total_count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetFolders": {
        "type": "object",
        "properties": {
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Folder"
            },
            "nullable": true
          },
          "need_to_relaunch": {
            "type": "boolean"
          },
          "continuous_token": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total_count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetForm": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of FormInstance",
            "nullable": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Is FormInstance enable"
          },
          "form_id": {
            "type": "string",
            "description": "Id of Form",
            "nullable": true
          },
          "project_id": {
            "type": "string",
            "description": "Id of Project",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "template_name": {
            "type": "string",
            "description": "Template name",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/FormInstanceStatus"
          },
          "assignee_id": {
            "type": "string",
            "description": "Id of the user assigned to this form",
            "nullable": true
          },
          "company_id": {
            "type": "string",
            "description": "Id of Company assigned to this form",
            "nullable": true
          },
          "priority": {
            "$ref": "#/components/schemas/FormInstancePriority"
          },
          "due_date": {
            "type": "string",
            "nullable": true
          },
          "plan_id": {
            "type": "string",
            "nullable": true
          },
          "position_x": {
            "type": "string",
            "nullable": true
          },
          "position_y": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "nullable": true
          },
          "linked_forms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormInstanceLinkedItems"
            },
            "nullable": true
          },
          "linked_observations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormInstanceLinkedItems"
            },
            "nullable": true
          },
          "module_id": {
            "type": "string",
            "nullable": true
          },
          "phase_id": {
            "type": "string",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetFormFull": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "legacy_id": {
            "type": "integer",
            "format": "int32"
          },
          "enabled": {
            "type": "boolean"
          },
          "form_id": {
            "type": "string",
            "nullable": true
          },
          "organization_id": {
            "type": "string",
            "format": "uuid"
          },
          "organization_name": {
            "type": "string",
            "nullable": true
          },
          "project_id": {
            "type": "string",
            "nullable": true
          },
          "project_name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "template_name": {
            "type": "string",
            "nullable": true
          },
          "status_id": {
            "type": "string",
            "nullable": true
          },
          "status_name": {
            "type": "string",
            "nullable": true
          },
          "priority_id": {
            "type": "string",
            "nullable": true
          },
          "priority_name": {
            "type": "string",
            "nullable": true
          },
          "assignee_id": {
            "type": "string",
            "nullable": true
          },
          "assignee_name": {
            "type": "string",
            "nullable": true
          },
          "company_id": {
            "type": "string",
            "nullable": true
          },
          "company_name": {
            "type": "string",
            "nullable": true
          },
          "due_date": {
            "type": "string",
            "nullable": true
          },
          "plan_id": {
            "type": "string",
            "nullable": true
          },
          "plan_name": {
            "type": "string",
            "nullable": true
          },
          "position_x": {
            "type": "string",
            "nullable": true
          },
          "position_y": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "nullable": true
          },
          "module_id": {
            "type": "string",
            "nullable": true
          },
          "module_name": {
            "type": "string",
            "nullable": true
          },
          "phase_id": {
            "type": "string",
            "nullable": true
          },
          "phase_name": {
            "type": "string",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "nullable": true
          },
          "category_name": {
            "type": "string",
            "nullable": true
          },
          "deleted_at": {
            "type": "string",
            "nullable": true
          },
          "deleted_by": {
            "type": "string",
            "nullable": true
          },
          "client_created_at": {
            "type": "string",
            "format": "date-time"
          },
          "client_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "web_url": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetFormInstances": {
        "type": "object",
        "properties": {
          "forms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormInstance"
            },
            "nullable": true
          },
          "need_to_relaunch": {
            "type": "boolean"
          },
          "continuous_token": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total_count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetForms": {
        "type": "object",
        "properties": {
          "forms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Form"
            },
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetGeneratedPdfUnitReport": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          },
          "is_available": {
            "type": "boolean"
          },
          "is_in_error": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetGeneratedPdfUnitReportParameters": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetGroupForItem": {
        "type": "object",
        "properties": {
          "group_id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "members_count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetGroups": {
        "type": "object",
        "properties": {
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetGroup"
            },
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total_count": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetGroupsForItem": {
        "type": "object",
        "properties": {
          "shared_item_groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetGroupForItem"
            },
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetLanguage": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetLanguages": {
        "type": "object",
        "properties": {
          "langs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetLanguage"
            },
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetLogos": {
        "type": "object",
        "properties": {
          "logos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaResponseWithUrl"
            },
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total_count": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetMeetingDetail": {
        "type": "object",
        "properties": {
          "attendees": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "recipients": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "summoned": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "meeting_start_date": {
            "type": "string",
            "nullable": true
          },
          "meeting_end_date": {
            "type": "string",
            "nullable": true
          },
          "next_meeting_start_date": {
            "type": "string",
            "nullable": true
          },
          "next_meeting_end_date": {
            "type": "string",
            "nullable": true
          },
          "client_created_at": {
            "type": "string",
            "format": "date-time"
          },
          "client_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "export_status": {
            "type": "string",
            "nullable": true
          },
          "export_media_resource": {
            "$ref": "#/components/schemas/Media"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetMeetings": {
        "type": "object",
        "properties": {
          "meetings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Meeting"
            },
            "nullable": true
          },
          "need_to_relaunch": {
            "type": "boolean"
          },
          "continuous_token": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total_count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetMembers": {
        "type": "object",
        "properties": {
          "project_members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Member"
            },
            "nullable": true
          },
          "need_to_relaunch": {
            "type": "boolean"
          },
          "continuous_token": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total_count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetMessage": {
        "type": "object",
        "properties": {
          "message_id": {
            "type": "string",
            "nullable": true
          },
          "channel_type": {
            "type": "string",
            "nullable": true
          },
          "content_type": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "nullable": true
          },
          "client_created_at": {
            "type": "string",
            "nullable": true
          },
          "client_updated_at": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "$ref": "#/components/schemas/ItemMessage"
          }
        },
        "additionalProperties": false
      },
      "GetMessages": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetMessage"
            },
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetModules": {
        "type": "object",
        "properties": {
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Module"
            },
            "nullable": true
          },
          "need_to_relaunch": {
            "type": "boolean"
          },
          "continuous_token": {
            "type": "string",
            "nullable": true
          },
          "offset": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetModulesCategoriesResults": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModulesCategoriesResults"
            },
            "nullable": true,
            "readOnly": true
          },
          "list_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModulesCategoriesResults"
            },
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total_count": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "string",
            "nullable": true
          },
          "offset": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetModulesColor": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetModulesColors": {
        "type": "object",
        "properties": {
          "icons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetModulesColor"
            },
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetModulesForm": {
        "type": "object",
        "properties": {
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleForm"
            },
            "nullable": true
          },
          "need_to_relaunch": {
            "type": "boolean"
          },
          "continuous_token": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total_count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetModulesIcon": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetModulesIcons": {
        "type": "object",
        "properties": {
          "icons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetModulesIcon"
            },
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetModulesOrga": {
        "type": "object",
        "properties": {
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleOrga"
            },
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total_count": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetModulesOrgaSuggestion": {
        "type": "object",
        "properties": {
          "suggestions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleOrgaSuggestion"
            },
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total_count": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetModulesSuggestion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizedLabel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetModulesSuggestions": {
        "type": "object",
        "properties": {
          "suggestions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetModulesSuggestion"
            },
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetNextStatuses": {
        "type": "object",
        "properties": {
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatusResponseWithoutFlow"
            },
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetObservation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "project_id": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "trade": {
            "$ref": "#/components/schemas/ObservationTrade"
          },
          "common_observation": {
            "$ref": "#/components/schemas/ObservationCommonObservation"
          },
          "status": {
            "$ref": "#/components/schemas/ObservationStatus"
          },
          "assignee_id": {
            "type": "string",
            "nullable": true
          },
          "company_id": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "$ref": "#/components/schemas/ObservationPriority"
          },
          "due_date": {
            "type": "string",
            "nullable": true
          },
          "creator_id": {
            "type": "string",
            "nullable": true
          },
          "creation_date": {
            "type": "string",
            "format": "date-time"
          },
          "linked_forms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObservationLinkedItems"
            },
            "nullable": true
          },
          "linked_observations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObservationLinkedItems"
            },
            "nullable": true
          },
          "photos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObservationMediaResource"
            },
            "nullable": true
          },
          "plan_id": {
            "type": "string",
            "nullable": true
          },
          "position_x": {
            "type": "string",
            "nullable": true
          },
          "position_y": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "nullable": true
          },
          "module_id": {
            "type": "string",
            "nullable": true
          },
          "phase_id": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetObservationFull": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "legacy_id": {
            "type": "integer",
            "format": "int32"
          },
          "enabled": {
            "type": "boolean"
          },
          "project_id": {
            "type": "string",
            "nullable": true
          },
          "project_name": {
            "type": "string",
            "nullable": true
          },
          "organization_id": {
            "type": "string",
            "format": "uuid"
          },
          "organization_name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "status_id": {
            "type": "string",
            "nullable": true
          },
          "status_name": {
            "type": "string",
            "nullable": true
          },
          "priority_id": {
            "type": "string",
            "nullable": true
          },
          "priority_name": {
            "type": "string",
            "nullable": true
          },
          "plan_id": {
            "type": "string",
            "nullable": true
          },
          "plan_name": {
            "type": "string",
            "nullable": true
          },
          "position_x": {
            "type": "string",
            "nullable": true
          },
          "position_y": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "nullable": true
          },
          "assignee_id": {
            "type": "string",
            "nullable": true
          },
          "assignee_name": {
            "type": "string",
            "nullable": true
          },
          "company_id": {
            "type": "string",
            "nullable": true
          },
          "company_name": {
            "type": "string",
            "nullable": true
          },
          "trade_id": {
            "type": "string",
            "nullable": true
          },
          "trade_name": {
            "type": "string",
            "nullable": true
          },
          "common_observation_id": {
            "type": "string",
            "nullable": true
          },
          "common_observation_name": {
            "type": "string",
            "nullable": true
          },
          "due_date": {
            "type": "string",
            "nullable": true
          },
          "module_id": {
            "type": "string",
            "nullable": true
          },
          "module_name": {
            "type": "string",
            "nullable": true
          },
          "deleted_at": {
            "type": "string",
            "nullable": true
          },
          "deleted_by": {
            "type": "string",
            "nullable": true
          },
          "phase_id": {
            "type": "string",
            "nullable": true
          },
          "phase_name": {
            "type": "string",
            "nullable": true
          },
          "photos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObservationMediaResource"
            },
            "nullable": true
          },
          "client_created_at": {
            "type": "string",
            "format": "date-time"
          },
          "client_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "web_url": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetObservationParameters": {
        "type": "object",
        "properties": {
          "module_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "search_term": {
            "type": "string",
            "nullable": true
          },
          "status_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "priority_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "trade_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "plan_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "assignee_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "company_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "creator_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "due_date_from": {
            "type": "string",
            "nullable": true
          },
          "due_date_to": {
            "type": "string",
            "nullable": true
          },
          "created_at_from": {
            "type": "string",
            "nullable": true
          },
          "created_at_to": {
            "type": "string",
            "nullable": true
          },
          "phase_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "observation_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetOneGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "is_default": {
            "type": "boolean"
          },
          "members_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetOrgaMember": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "membership_type": {
            "type": "string",
            "nullable": true
          },
          "user_id": {
            "type": "string",
            "nullable": true
          },
          "legacy_id": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "nullable": true
          },
          "job_title": {
            "type": "string",
            "nullable": true
          },
          "media_resource": {
            "$ref": "#/components/schemas/Media"
          },
          "organization_role": {
            "$ref": "#/components/schemas/GetRole"
          },
          "is_pending": {
            "type": "boolean"
          },
          "is_processing": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetOrgaMembers": {
        "type": "object",
        "properties": {
          "organization_members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetOrgaMember"
            },
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total_count": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetOrgaMembersParameters": {
        "type": "object",
        "properties": {
          "search_term": {
            "type": "string",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "with_processing_members": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetOrganization": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetOrganizationFormTemplatesCustom": {
        "type": "object",
        "properties": {
          "custom_template_id": {
            "type": "string",
            "nullable": true
          },
          "custom_template_name": {
            "type": "string",
            "nullable": true
          },
          "possible_output_formats": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetOrganizationReferentialFormTemplates": {
        "type": "object",
        "properties": {
          "form_templates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormTemplate"
            },
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total_count": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetOrganizationReferentialPriorities": {
        "type": "object",
        "properties": {
          "module_type": {
            "$ref": "#/components/schemas/ModuleType"
          },
          "priorities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Priority"
            },
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total_count": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetOrganizationReferentialStatuses": {
        "type": "object",
        "properties": {
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Status"
            },
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total_count": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetOrganizationReferentialTrades": {
        "type": "object",
        "properties": {
          "trades": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TradeWithCommonObservations"
            },
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total_count": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetPhases": {
        "type": "object",
        "properties": {
          "phases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Phase"
            },
            "nullable": true
          },
          "need_to_relaunch": {
            "type": "boolean"
          },
          "continuous_token": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total_count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetPlan": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "project_id": {
            "type": "string",
            "nullable": true
          },
          "folder_id": {
            "type": "string",
            "nullable": true
          },
          "media_resource": {
            "$ref": "#/components/schemas/Media"
          },
          "enabled": {
            "type": "boolean"
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "form_instances_counter": {
            "type": "integer",
            "format": "int32"
          },
          "observations_counter": {
            "type": "integer",
            "format": "int32"
          },
          "plan_type": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetPlans": {
        "type": "object",
        "properties": {
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Plan"
            },
            "nullable": true
          },
          "need_to_relaunch": {
            "type": "boolean"
          },
          "continuous_token": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total_count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetPriorities": {
        "type": "object",
        "properties": {
          "priorities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Priority"
            },
            "nullable": true
          },
          "need_to_relaunch": {
            "type": "boolean"
          },
          "continuous_token": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total_count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetProject": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "nullable": true
          },
          "time_zone": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "project_id": {
            "type": "string",
            "nullable": true
          },
          "organization_id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "case_number": {
            "type": "string",
            "nullable": true
          },
          "workspace_id": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "member_count": {
            "type": "integer",
            "format": "int32"
          },
          "is_archived": {
            "type": "boolean"
          },
          "media_resource": {
            "$ref": "#/components/schemas/Media"
          },
          "current_user_in_project": {
            "type": "boolean"
          },
          "is_active": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetProjectRoles": {
        "type": "object",
        "properties": {
          "project_roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectRole"
            },
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total_count": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetProjects": {
        "type": "object",
        "properties": {
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Project"
            },
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total_count": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetReducedFormInstances": {
        "type": "object",
        "properties": {
          "form_instance_ids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReducedFormInstances"
            },
            "nullable": true
          },
          "limit": {
            "type": "string",
            "nullable": true
          },
          "offset": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total_count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetReducedObservations": {
        "type": "object",
        "properties": {
          "observations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObservationsFromListResponse2"
            },
            "nullable": true
          },
          "need_to_relaunch": {
            "type": "boolean"
          },
          "continuous_token": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total_count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetReducedObservationsResponse2": {
        "type": "object",
        "properties": {
          "observations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObservationsFromlistResponse1"
            },
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total_count": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetRole": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "names": {
            "$ref": "#/components/schemas/LocalizedLabelFallback"
          },
          "descriptions": {
            "$ref": "#/components/schemas/LocalizedLabelFallback"
          },
          "is_default": {
            "type": "boolean"
          },
          "is_default_invitation_role": {
            "type": "boolean"
          },
          "user_count": {
            "type": "integer",
            "format": "int32"
          },
          "position": {
            "type": "integer",
            "format": "int32"
          },
          "authorization_role_id": {
            "type": "string",
            "format": "uuid"
          },
          "higher_role_id": {
            "type": "string",
            "nullable": true
          },
          "is_lower_role": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetRoles": {
        "type": "object",
        "properties": {
          "organization_roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetRole"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetStatuses": {
        "type": "object",
        "properties": {
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatusResponseWithoutFlow"
            },
            "nullable": true
          },
          "need_to_relaunch": {
            "type": "boolean"
          },
          "continuous_token": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total_count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetTimeZones": {
        "type": "object",
        "properties": {
          "time_zones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimeZones"
            },
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total_count": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetTrades": {
        "type": "object",
        "properties": {
          "trades": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectTrade"
            },
            "nullable": true
          },
          "need_to_relaunch": {
            "type": "boolean"
          },
          "continuous_token": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total_count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetUserInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "company": {
            "type": "string",
            "nullable": true
          },
          "is_active": {
            "type": "string",
            "nullable": true
          },
          "email_validated": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "nullable": true
          },
          "media_resource": {
            "$ref": "#/components/schemas/Media"
          }
        },
        "additionalProperties": false
      },
      "GetUserToken": {
        "type": "object",
        "properties": {
          "user_token": {
            "type": "string",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetUserTokenParameters": {
        "required": [
          "login",
          "password"
        ],
        "type": "object",
        "properties": {
          "login": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetWorkspaceMembers": {
        "type": "object",
        "properties": {
          "workspace_members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrgaMemberResponses"
            },
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "total_count": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetWorkspaces": {
        "type": "object",
        "properties": {
          "workspaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Workspace"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GridInstance": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "nullable": true
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "nullable": true
          },
          "update_by": {
            "type": "string",
            "nullable": true
          },
          "form_template_instance_id": {
            "type": "string",
            "nullable": true
          },
          "form_template": {
            "$ref": "#/components/schemas/FormTemplateInstance"
          }
        },
        "additionalProperties": false
      },
      "GroupMember": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "user_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupPlan": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IconTypeParameters": {
        "enum": [
          "ArrowUp",
          "ArrowDown",
          "RoundExclamationMark",
          "DiamondExclamationMark",
          "TriangleExclamationMark",
          "RoundOne",
          "RoundTwo",
          "RoundThree",
          "RoundFour",
          "RoundFive",
          "EmojiSad",
          "EmojiNeutral",
          "EmojiHappy",
          "ChevronUp",
          "ChevronDown",
          "ChevronsUp",
          "ChevronsDown",
          "AlertTriangle",
          "Minus",
          "XOctagon",
          "AlertOnly",
          "MinusCircle"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "IconTypeParameters",
          "modelAsString": true
        }
      },
      "ImageSizeEnum": {
        "enum": [
          "Small",
          "Medium",
          "Large",
          "None"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "ImageSizeEnum",
          "modelAsString": true
        }
      },
      "InvitationParameters": {
        "required": [
          "email",
          "project_role_id"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "project_role_id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ItemLinkItemLinkItemMessage": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ItemMessage": {
        "type": "object",
        "properties": {
          "text": {
            "$ref": "#/components/schemas/ItemTextLinkItemMessage"
          },
          "media_resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Media"
            },
            "nullable": true
          },
          "references": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemLinkItemLinkItemMessage"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ItemReferential": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ItemTextLinkItemMessage": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LinkModuleFormsParameters": {
        "type": "object",
        "properties": {
          "form_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LinkProjectModuleFormsParameters": {
        "type": "object",
        "properties": {
          "form_id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "LocalizedLabel": {
        "required": [
          "language",
          "translation"
        ],
        "type": "object",
        "properties": {
          "language": {
            "type": "string"
          },
          "translation": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "LocalizedLabelFallback": {
        "type": "object",
        "properties": {
          "translation_fallback": {
            "type": "string",
            "nullable": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizedLabel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LocalizedLabelParameters": {
        "required": [
          "language",
          "translation"
        ],
        "type": "object",
        "properties": {
          "language": {
            "type": "string"
          },
          "translation": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Media": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "file_name": {
            "type": "string",
            "nullable": true
          },
          "mime_type": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MediaResourceUrl": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MediaResponseWithUrl": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          },
          "display_name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "file_name": {
            "type": "string",
            "nullable": true
          },
          "mime_type": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Meeting": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "meeting_start_date": {
            "type": "string",
            "nullable": true
          },
          "meeting_end_date": {
            "type": "string",
            "nullable": true
          },
          "next_meeting_start_date": {
            "type": "string",
            "nullable": true
          },
          "next_meeting_end_date": {
            "type": "string",
            "nullable": true
          },
          "client_created_at": {
            "type": "string",
            "format": "date-time"
          },
          "client_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "export_status": {
            "type": "string",
            "nullable": true
          },
          "export_media_resource": {
            "$ref": "#/components/schemas/Media"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Member": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "project_role_id": {
            "type": "string",
            "format": "uuid"
          },
          "picture": {
            "$ref": "#/components/schemas/Media"
          },
          "enabled": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Module": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "project_id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "number",
            "format": "double"
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizedLabel"
            },
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean"
          },
          "settings": {
            "$ref": "#/components/schemas/ModuleSettings"
          }
        },
        "additionalProperties": false
      },
      "ModuleCategoryParameters": {
        "type": "object",
        "properties": {
          "parent_id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModuleContent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parent_id": {
            "type": "string",
            "nullable": true
          },
          "content_type": {
            "type": "string",
            "nullable": true
          },
          "container_id": {
            "type": "string",
            "nullable": true
          },
          "container_type": {
            "type": "string",
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleContent"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModuleForm": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "project_id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "number",
            "format": "double"
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizedLabel"
            },
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ModuleFormWithContainer": {
        "type": "object",
        "properties": {
          "container_id": {
            "type": "string",
            "nullable": true
          },
          "container_type": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "project_id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "number",
            "format": "double"
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizedLabel"
            },
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ModuleForms": {
        "type": "object",
        "properties": {
          "form_id": {
            "type": "string",
            "nullable": true
          },
          "container_id": {
            "type": "string",
            "nullable": true
          },
          "container_type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModuleOrga": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "container_id": {
            "type": "string",
            "nullable": true
          },
          "container_type": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "visibility": {
            "type": "string",
            "nullable": true
          },
          "module_forms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleForms"
            },
            "nullable": true
          },
          "module_content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleContent"
            },
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ModuleOrgaSuggestion": {
        "type": "object",
        "properties": {
          "is_default": {
            "type": "boolean"
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizedLabel"
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "container_id": {
            "type": "string",
            "nullable": true
          },
          "container_type": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "visibility": {
            "type": "string",
            "nullable": true
          },
          "module_forms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleForms"
            },
            "nullable": true
          },
          "module_content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModuleContent"
            },
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ModuleSettings": {
        "type": "object",
        "properties": {
          "is_observation_library_mandatory": {
            "type": "string",
            "nullable": true
          },
          "is_description_mandatory": {
            "type": "string",
            "nullable": true
          },
          "is_photo_mandatory": {
            "type": "string",
            "nullable": true
          },
          "is_company_mandatory": {
            "type": "string",
            "nullable": true
          },
          "is_group_mandatory": {
            "type": "string",
            "nullable": true
          },
          "due_date_days_offset": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModuleType": {
        "enum": [
          "Observation",
          "Forms"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "ModuleType",
          "modelAsString": true
        }
      },
      "ModulesCategoriesResults": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "module_id": {
            "type": "string",
            "format": "uuid"
          },
          "container_id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parent_id": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ObservationCommonObservation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "trade_id": {
            "type": "string",
            "nullable": true
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizedLabel"
            },
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ObservationLinkedItems": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ObservationMediaResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "position": {
            "type": "string",
            "nullable": true
          },
          "mime_type": {
            "type": "string",
            "nullable": true
          },
          "file_name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ObservationPriority": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizedLabel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ObservationStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizedLabel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ObservationTrade": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizedLabel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ObservationsFromListResponse2": {
        "type": "object",
        "properties": {
          "observation_id": {
            "type": "string",
            "nullable": true
          },
          "module_id": {
            "type": "string",
            "nullable": true
          },
          "position_x": {
            "type": "string",
            "nullable": true
          },
          "position_y": {
            "type": "string",
            "nullable": true
          },
          "common_observation_id": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "observation_media_resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObservationMediaResource"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "status_id": {
            "type": "string",
            "nullable": true
          },
          "priority_id": {
            "type": "string",
            "nullable": true
          },
          "trade_id": {
            "type": "string",
            "nullable": true
          },
          "plan_id": {
            "type": "string",
            "nullable": true
          },
          "assignee_id": {
            "type": "string",
            "nullable": true
          },
          "company_id": {
            "type": "string",
            "nullable": true
          },
          "due_date": {
            "type": "string",
            "nullable": true
          },
          "client_created_at": {
            "type": "string",
            "format": "date-time"
          },
          "client_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          },
          "phase_id": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ObservationsFromlistResponse1": {
        "type": "object",
        "properties": {
          "observation_id": {
            "type": "string",
            "nullable": true
          },
          "common_observation_name": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "status_id": {
            "type": "string",
            "nullable": true
          },
          "priority_id": {
            "type": "string",
            "nullable": true
          },
          "trade_id": {
            "type": "string",
            "nullable": true
          },
          "plan_id": {
            "type": "string",
            "nullable": true
          },
          "assignee_id": {
            "type": "string",
            "nullable": true
          },
          "company_id": {
            "type": "string",
            "nullable": true
          },
          "due_date": {
            "type": "string",
            "nullable": true
          },
          "client_created_at": {
            "type": "string",
            "format": "date-time"
          },
          "client_updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          },
          "phase_id": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrgaForm": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Translation"
            },
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          },
          "deleted_at": {
            "type": "string",
            "nullable": true
          },
          "deleted_by": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "parent_id": {
            "type": "string",
            "nullable": true
          },
          "form_statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrgaFormStatus"
            },
            "nullable": true
          },
          "form_template": {
            "$ref": "#/components/schemas/FormTemplateInstance"
          },
          "family_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrgaFormStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "num": {
            "type": "integer",
            "format": "int32"
          },
          "default_status": {
            "type": "boolean"
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Translation"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrgaMemberResponses": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "nullable": true
          },
          "is_admin": {
            "type": "boolean"
          },
          "is_pending": {
            "type": "boolean"
          },
          "media_resource": {
            "$ref": "#/components/schemas/Media"
          }
        },
        "additionalProperties": false
      },
      "OrganizationDataSet": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "is_active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "OrganizationDataSetUrl": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganizationDataSets": {
        "type": "object",
        "properties": {
          "data_sets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationDataSet"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganizationReferential": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "organization_id": {
            "type": "string",
            "format": "uuid"
          },
          "media_resource": {
            "$ref": "#/components/schemas/Media"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "structure": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          },
          "deleted_at": {
            "type": "string",
            "nullable": true
          },
          "deleted_by": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganizationReferentialParameters": {
        "type": "object",
        "properties": {
          "media_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganizationReferentialPutParameters": {
        "type": "object",
        "properties": {
          "media_id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "OrganizationReferentialRenameParameters": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganizationReferentials": {
        "type": "object",
        "properties": {
          "data_referentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationReferential"
            },
            "nullable": true
          },
          "continuous_token": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Phase": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "order": {
            "type": "number",
            "format": "double"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizedLabel"
            },
            "nullable": true
          },
          "enabled": {
            "type": "boolean",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "deleted_at": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Plan": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "project_id": {
            "type": "string",
            "nullable": true
          },
          "folder_id": {
            "type": "string",
            "nullable": true
          },
          "media_resource": {
            "$ref": "#/components/schemas/Media"
          },
          "enabled": {
            "type": "boolean"
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "form_instances_counter": {
            "type": "integer",
            "format": "int32"
          },
          "observations_counter": {
            "type": "integer",
            "format": "int32"
          },
          "plan_type": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Priority": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "position": {
            "type": "integer",
            "format": "int32"
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "icon": {
            "$ref": "#/components/schemas/IconTypeParameters"
          },
          "is_default": {
            "type": "boolean"
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizedLabel"
            },
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PriorityParameters": {
        "required": [
          "color",
          "icon",
          "is_default",
          "names",
          "position"
        ],
        "type": "object",
        "properties": {
          "position": {
            "type": "integer",
            "format": "int32"
          },
          "color": {
            "type": "string"
          },
          "icon": {
            "$ref": "#/components/schemas/IconTypeParameters"
          },
          "is_default": {
            "type": "boolean"
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizedLabelParameters"
            }
          }
        },
        "additionalProperties": false
      },
      "Project": {
        "type": "object",
        "properties": {
          "project_id": {
            "type": "string",
            "nullable": true
          },
          "organization_id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "case_number": {
            "type": "string",
            "nullable": true
          },
          "workspace_id": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "member_count": {
            "type": "integer",
            "format": "int32"
          },
          "is_archived": {
            "type": "boolean"
          },
          "media_resource": {
            "$ref": "#/components/schemas/Media"
          },
          "current_user_in_project": {
            "type": "boolean"
          },
          "is_active": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectCommonObs": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "enabled": {
            "type": "boolean"
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizedLabel"
            },
            "nullable": true
          },
          "trade_id": {
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectRole": {
        "type": "object",
        "properties": {
          "user_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizedLabel"
            },
            "nullable": true
          },
          "descriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizedLabel"
            },
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectTrade": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "enabled": {
            "type": "boolean"
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizedLabel"
            },
            "nullable": true
          },
          "module_id": {
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PutDataSetsParameters": {
        "type": "object",
        "properties": {
          "data_sets": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PutModuleMeetingParameters": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReducedFormInstances": {
        "type": "object",
        "properties": {
          "form_instance_id": {
            "type": "string",
            "nullable": true
          },
          "form_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "num": {
            "type": "integer",
            "format": "int32"
          },
          "template_name": {
            "type": "string",
            "nullable": true
          },
          "phase_id": {
            "type": "string",
            "nullable": true
          },
          "module_id": {
            "type": "string",
            "nullable": true
          },
          "category_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SetCustomReportParameters": {
        "type": "object",
        "properties": {
          "media_id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "SetMessageParameters": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "nullable": true
          },
          "reference_id": {
            "type": "string",
            "nullable": true
          },
          "reference_type": {
            "type": "string",
            "nullable": true
          },
          "media_resource_id": {
            "type": "string",
            "nullable": true
          },
          "media_resource_name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SetOrganizationReferentialCommonObservations": {
        "type": "object",
        "properties": {
          "common_observations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonObservation"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SetOrganizationReferentialCommonObservationsParameters": {
        "required": [
          "common_observations"
        ],
        "type": "object",
        "properties": {
          "common_observations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonObservationParameters"
            }
          }
        },
        "additionalProperties": false
      },
      "SetOrganizationReferentialFormTemplates": {
        "type": "object",
        "properties": {
          "form_templates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormTemplate"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SetOrganizationReferentialFormTemplatesParameters": {
        "required": [
          "form_ids",
          "form_visibility"
        ],
        "type": "object",
        "properties": {
          "form_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "form_visibility": {
            "$ref": "#/components/schemas/FormVisibility"
          }
        },
        "additionalProperties": false
      },
      "SetOrganizationReferentialPriorities": {
        "type": "object",
        "properties": {
          "module_type": {
            "$ref": "#/components/schemas/ModuleType"
          },
          "priorities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Priority"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SetOrganizationReferentialPrioritiesParameters": {
        "required": [
          "module_type",
          "priorities"
        ],
        "type": "object",
        "properties": {
          "module_type": {
            "$ref": "#/components/schemas/ModuleType"
          },
          "priorities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriorityParameters"
            }
          }
        },
        "additionalProperties": false
      },
      "SetOrganizationReferentialStatuses": {
        "type": "object",
        "properties": {
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Status"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SetOrganizationReferentialStatusesParameters": {
        "required": [
          "statuses"
        ],
        "type": "object",
        "properties": {
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatusParameters"
            }
          },
          "projects_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SetOrganizationReferentialTrades": {
        "type": "object",
        "properties": {
          "trades": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Trade"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SetOrganizationReferentialTradesParameters": {
        "required": [
          "trades"
        ],
        "type": "object",
        "properties": {
          "trades": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TradeParameters"
            }
          }
        },
        "additionalProperties": false
      },
      "Status": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "position": {
            "type": "integer",
            "format": "int32"
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "is_default": {
            "type": "boolean"
          },
          "enabled": {
            "type": "boolean"
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizedLabel"
            },
            "nullable": true
          },
          "to_statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatusToStatus"
            },
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StatusParameters": {
        "required": [
          "color",
          "is_default",
          "names",
          "position",
          "to_statuses"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "format": "int32"
          },
          "color": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizedLabelParameters"
            }
          },
          "to_statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatusToStatusParameters"
            }
          }
        },
        "additionalProperties": false
      },
      "StatusResponseWithoutFlow": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "position": {
            "type": "integer",
            "format": "int32"
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "is_default": {
            "type": "boolean"
          },
          "enabled": {
            "type": "boolean"
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizedLabel"
            },
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StatusToStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "is_deleted": {
            "type": "boolean"
          },
          "project_role_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StatusToStatusParameters": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "is_deleted": {
            "type": "boolean"
          },
          "project_role_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TimeZones": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "display_name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "standard_name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "utc_offset": {
            "type": "string",
            "format": "date-span",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Trade": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "enabled": {
            "type": "boolean"
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizedLabel"
            },
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TradeParameters": {
        "required": [
          "names"
        ],
        "type": "object",
        "properties": {
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizedLabelParameters"
            }
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TradeWithCommonObservations": {
        "type": "object",
        "properties": {
          "common_observations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonObservation"
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "enabled": {
            "type": "boolean"
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizedLabel"
            },
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Translation": {
        "type": "object",
        "properties": {
          "locale": {
            "type": "string",
            "nullable": true
          },
          "translation": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TypeFieldData": {
        "enum": [
          "Text",
          "Number",
          "Calendar",
          "Resources",
          "Boolean",
          "Uuid",
          "None"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "TypeFieldData",
          "modelAsString": true
        }
      },
      "TypeFieldPresentation": {
        "enum": [
          "ShortAnswer",
          "Paragraph",
          "SingleChoice",
          "MultipleChoice",
          "Control",
          "Email",
          "PhoneNumber",
          "Password",
          "Signature",
          "FormLink",
          "Attachments",
          "Disclaimer",
          "Button",
          "Formula"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "TypeFieldPresentation",
          "modelAsString": true
        }
      },
      "UpdateCompaniesParameters": {
        "required": [
          "companies"
        ],
        "type": "object",
        "properties": {
          "companies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateCompanyParameters"
            }
          }
        },
        "additionalProperties": false
      },
      "UpdateCompanyParameters": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "reference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateDocumentParameters": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "media_id": {
            "type": "string",
            "nullable": true
          },
          "parent_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateFolderParameters": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "parent_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateFormAnswer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "field_id": {
            "type": "string",
            "format": "uuid"
          },
          "form_template_instance_id": {
            "type": "string",
            "format": "uuid"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "value_string": {
            "type": "string",
            "nullable": true
          },
          "value_numeric": {
            "type": "string",
            "nullable": true
          },
          "value_boolean": {
            "type": "string",
            "nullable": true
          },
          "array_field_choices": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "value_date1": {
            "type": "string",
            "nullable": true
          },
          "value_date2": {
            "type": "string",
            "nullable": true
          },
          "value_time1": {
            "type": "string",
            "nullable": true
          },
          "value_time2": {
            "type": "string",
            "nullable": true
          },
          "value_form_template_instance_id": {
            "type": "string",
            "nullable": true
          },
          "value_media_resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Media"
            },
            "nullable": true
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "na_value": {
            "type": "boolean"
          },
          "is_valid_content": {
            "type": "boolean"
          },
          "client_created_at": {
            "type": "string",
            "format": "date-time"
          },
          "client_updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "UpdateFormAnswerParameters": {
        "type": "object",
        "properties": {
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "value_string": {
            "type": "string",
            "nullable": true
          },
          "value_numeric": {
            "type": "string",
            "nullable": true
          },
          "value_boolean": {
            "type": "string",
            "nullable": true
          },
          "value_date1": {
            "type": "string",
            "nullable": true
          },
          "value_time1": {
            "type": "string",
            "nullable": true
          },
          "array_field_choices": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "na_value": {
            "type": "boolean"
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "value_form_template_instance_id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "UpdateFormInstanceParameters": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "priority_id": {
            "type": "string",
            "nullable": true
          },
          "status_id": {
            "type": "string",
            "nullable": true
          },
          "assignee_id": {
            "type": "string",
            "nullable": true
          },
          "company_id": {
            "type": "string",
            "nullable": true
          },
          "plan_id": {
            "type": "string",
            "nullable": true
          },
          "due_date": {
            "type": "string",
            "nullable": true
          },
          "phase_id": {
            "type": "string",
            "nullable": true
          },
          "position_x": {
            "type": "string",
            "nullable": true
          },
          "position_y": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "nullable": true
          },
          "client_created_at": {
            "type": "string",
            "nullable": true
          },
          "client_updated_at": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateGroupParameters": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UpdateMembersRoleParameters": {
        "required": [
          "role_id"
        ],
        "type": "object",
        "properties": {
          "role_id": {
            "type": "string",
            "format": "uuid"
          },
          "user_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateObservationParameters": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "priority_id": {
            "type": "string",
            "nullable": true
          },
          "status_id": {
            "type": "string",
            "nullable": true
          },
          "assignee_id": {
            "type": "string",
            "nullable": true
          },
          "company_id": {
            "type": "string",
            "nullable": true
          },
          "plan_id": {
            "type": "string",
            "nullable": true
          },
          "due_date": {
            "type": "string",
            "nullable": true
          },
          "module_id": {
            "type": "string",
            "nullable": true
          },
          "phase_id": {
            "type": "string",
            "nullable": true
          },
          "trade_id": {
            "type": "string",
            "nullable": true
          },
          "common_observation_id": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "position_x": {
            "type": "string",
            "nullable": true
          },
          "position_y": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "string",
            "nullable": true
          },
          "longitude": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdatePhaseParameters": {
        "type": "object",
        "properties": {
          "order": {
            "type": "number",
            "format": "double"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdatePlanParameters": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "media_id": {
            "type": "string",
            "nullable": true
          },
          "folder_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateProject": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "nullable": true
          },
          "time_zone": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "project_id": {
            "type": "string",
            "nullable": true
          },
          "organization_id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "case_number": {
            "type": "string",
            "nullable": true
          },
          "workspace_id": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "member_count": {
            "type": "integer",
            "format": "int32"
          },
          "is_archived": {
            "type": "boolean"
          },
          "media_resource": {
            "$ref": "#/components/schemas/Media"
          },
          "current_user_in_project": {
            "type": "boolean"
          },
          "is_active": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateProjectParameters": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "time_zone": {
            "type": "string",
            "nullable": true
          },
          "case_number": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "end_date": {
            "type": "string",
            "nullable": true
          },
          "media_id": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateWorkspaceParameter": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "client_reference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UploadChunkFinalizeParameters": {
        "type": "object",
        "properties": {
          "chunk_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UploadChunkInit": {
        "type": "object",
        "properties": {
          "expires_after_secs": {
            "type": "number",
            "format": "double"
          },
          "chunk_id": {
            "type": "string",
            "nullable": true
          },
          "media_id": {
            "type": "string",
            "nullable": true
          },
          "min_chunk_size": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UploadChunkInitParameters": {
        "type": "object",
        "properties": {
          "file_name": {
            "type": "string",
            "nullable": true
          },
          "total_bytes": {
            "type": "integer",
            "format": "int32"
          },
          "md5": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Uploads": {
        "type": "object",
        "properties": {
          "medias": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Media"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Webhook": {
        "type": "object",
        "properties": {
          "hook_id": {
            "type": "string",
            "format": "uuid"
          },
          "event": {
            "type": "string",
            "nullable": true
          },
          "business_organization_id": {
            "type": "string",
            "nullable": true
          },
          "project_id": {
            "type": "string",
            "nullable": true
          },
          "user_id": {
            "type": "string",
            "nullable": true
          },
          "client_token": {
            "type": "string",
            "nullable": true
          },
          "client_header_key": {
            "type": "string",
            "nullable": true
          },
          "client_url": {
            "type": "string",
            "nullable": true
          },
          "is_enabled": {
            "type": "boolean"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "WebhookCreateParameters": {
        "type": "object",
        "properties": {
          "event": {
            "type": "integer",
            "format": "int32"
          },
          "business_organization_id": {
            "type": "string",
            "format": "uuid"
          },
          "project_id": {
            "type": "string",
            "nullable": true
          },
          "client_token": {
            "type": "string",
            "nullable": true
          },
          "client_header_key": {
            "type": "string",
            "nullable": true
          },
          "client_url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebhookEvent": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "designation": {
            "type": "string",
            "nullable": true
          },
          "generic": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebhookEventList": {
        "type": "object",
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebhookEvent"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebhookList": {
        "type": "object",
        "properties": {
          "webhooks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Webhook"
            },
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WebhookUpdateParameters": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "event": {
            "type": "integer",
            "format": "int32"
          },
          "business_organization_id": {
            "type": "string",
            "format": "uuid"
          },
          "project_id": {
            "type": "string",
            "nullable": true
          },
          "client_token": {
            "type": "string",
            "nullable": true
          },
          "client_header_key": {
            "type": "string",
            "nullable": true
          },
          "client_url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Workspace": {
        "type": "object",
        "properties": {
          "workspace_id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parent_id": {
            "type": "string",
            "nullable": true
          },
          "client_reference": {
            "type": "string",
            "nullable": true
          },
          "media_resource": {
            "$ref": "#/components/schemas/Media"
          },
          "deleted_by": {
            "type": "string",
            "nullable": true
          },
          "deleted_at": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkspaceAddMemberParameters": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "nullable": true
          },
          "user_email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkspaceDelMemberParameters": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "nullable": true
          },
          "user_email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Please insert JWT with Bearer into field",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}